{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPn100VxBFEg+O8V3+GAs9Y",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/nabiltoby/DataMining/blob/main/naive_bayes.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "vpI2N2Rplc68"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = pd.read_csv(\"Social_Network.csv\")\n",
        "x = dataset.iloc[:, [2,3]].values\n",
        "y = dataset.iloc[:, -1].values\n"
      ],
      "metadata": {
        "id": "HQNZb8mXmc0N"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "d-AL02Y0nKg4",
        "outputId": "6af3a6c8-58fa-45d7-92fc-c19c19df5f2d"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[    19  21000]\n",
            " [    32  25000]\n",
            " [    28  43000]\n",
            " [    27  57000]\n",
            " [    19  78000]\n",
            " [    25  58000]\n",
            " [    27  84000]\n",
            " [    32 150000]\n",
            " [    25  33000]\n",
            " [    35  65000]\n",
            " [    26  80000]\n",
            " [    26  52000]\n",
            " [    20  86000]\n",
            " [    32  18000]\n",
            " [    18  82000]\n",
            " [    29  80000]\n",
            " [    47  25000]\n",
            " [    45  26000]\n",
            " [    46  28000]\n",
            " [    48  29000]\n",
            " [    45  22000]\n",
            " [    47  49000]\n",
            " [    48  41000]\n",
            " [    45  22000]\n",
            " [    46  23000]\n",
            " [    47  50000]\n",
            " [    49  28000]\n",
            " [    47  30000]\n",
            " [    29  43000]\n",
            " [    31  18000]\n",
            " [    31  74000]\n",
            " [    27 137000]\n",
            " [    21  16000]\n",
            " [    28  44000]\n",
            " [    27  90000]\n",
            " [    35  27000]\n",
            " [    33  28000]\n",
            " [    30  49000]\n",
            " [    26  73000]\n",
            " [    27  31000]\n",
            " [    27  17000]\n",
            " [    33  51000]\n",
            " [    35 108000]\n",
            " [    30  15000]\n",
            " [    28  84000]\n",
            " [    23  20000]\n",
            " [    25  79000]\n",
            " [    27  54000]\n",
            " [    30 135000]\n",
            " [    31  89000]\n",
            " [    24  32000]\n",
            " [    18  44000]\n",
            " [    29  83000]\n",
            " [    35  23000]\n",
            " [    27  58000]\n",
            " [    24  55000]\n",
            " [    23  48000]\n",
            " [    28  79000]\n",
            " [    22  18000]\n",
            " [    32 117000]\n",
            " [    27  20000]\n",
            " [    25  87000]\n",
            " [    23  66000]\n",
            " [    32 120000]\n",
            " [    59  83000]\n",
            " [    24  58000]\n",
            " [    24  19000]\n",
            " [    23  82000]\n",
            " [    22  63000]\n",
            " [    31  68000]\n",
            " [    25  80000]\n",
            " [    24  27000]\n",
            " [    18  23000]\n",
            " [    33 113000]\n",
            " [    32  18000]\n",
            " [    34 112000]\n",
            " [    18  52000]\n",
            " [    22  27000]\n",
            " [    28  87000]\n",
            " [    26  17000]\n",
            " [    30  80000]\n",
            " [    39  42000]\n",
            " [    20  49000]\n",
            " [    35  88000]\n",
            " [    30  62000]\n",
            " [    31 118000]\n",
            " [    24  55000]\n",
            " [    28  85000]\n",
            " [    26  81000]\n",
            " [    35  50000]\n",
            " [    22  81000]\n",
            " [    30 116000]\n",
            " [    26  15000]\n",
            " [    29  28000]\n",
            " [    29  83000]\n",
            " [    35  44000]\n",
            " [    35  25000]\n",
            " [    28 123000]\n",
            " [    35  73000]\n",
            " [    28  37000]\n",
            " [    27  88000]\n",
            " [    28  59000]\n",
            " [    32  86000]\n",
            " [    33 149000]\n",
            " [    19  21000]\n",
            " [    21  72000]\n",
            " [    26  35000]\n",
            " [    27  89000]\n",
            " [    26  86000]\n",
            " [    38  80000]\n",
            " [    39  71000]\n",
            " [    37  71000]\n",
            " [    38  61000]\n",
            " [    37  55000]\n",
            " [    42  80000]\n",
            " [    40  57000]\n",
            " [    35  75000]\n",
            " [    36  52000]\n",
            " [    40  59000]\n",
            " [    41  59000]\n",
            " [    36  75000]\n",
            " [    37  72000]\n",
            " [    40  75000]\n",
            " [    35  53000]\n",
            " [    41  51000]\n",
            " [    39  61000]\n",
            " [    42  65000]\n",
            " [    26  32000]\n",
            " [    30  17000]\n",
            " [    26  84000]\n",
            " [    31  58000]\n",
            " [    33  31000]\n",
            " [    30  87000]\n",
            " [    21  68000]\n",
            " [    28  55000]\n",
            " [    23  63000]\n",
            " [    20  82000]\n",
            " [    30 107000]\n",
            " [    28  59000]\n",
            " [    19  25000]\n",
            " [    19  85000]\n",
            " [    18  68000]\n",
            " [    35  59000]\n",
            " [    38  89000]\n",
            " [    34  25000]\n",
            " [    24  89000]\n",
            " [    27  96000]\n",
            " [    41  30000]\n",
            " [    29  61000]\n",
            " [    20  74000]\n",
            " [    26  15000]\n",
            " [    41  45000]\n",
            " [    31  76000]\n",
            " [    36  50000]\n",
            " [    40  47000]\n",
            " [    31  15000]\n",
            " [    46  59000]\n",
            " [    29  75000]\n",
            " [    26  30000]\n",
            " [    32 135000]\n",
            " [    32 100000]\n",
            " [    25  90000]\n",
            " [    37  33000]\n",
            " [    35  38000]\n",
            " [    33  69000]\n",
            " [    18  86000]\n",
            " [    22  55000]\n",
            " [    35  71000]\n",
            " [    29 148000]\n",
            " [    29  47000]\n",
            " [    21  88000]\n",
            " [    34 115000]\n",
            " [    26 118000]\n",
            " [    34  43000]\n",
            " [    34  72000]\n",
            " [    23  28000]\n",
            " [    35  47000]\n",
            " [    25  22000]\n",
            " [    24  23000]\n",
            " [    31  34000]\n",
            " [    26  16000]\n",
            " [    31  71000]\n",
            " [    32 117000]\n",
            " [    33  43000]\n",
            " [    33  60000]\n",
            " [    31  66000]\n",
            " [    20  82000]\n",
            " [    33  41000]\n",
            " [    35  72000]\n",
            " [    28  32000]\n",
            " [    24  84000]\n",
            " [    19  26000]\n",
            " [    29  43000]\n",
            " [    19  70000]\n",
            " [    28  89000]\n",
            " [    34  43000]\n",
            " [    30  79000]\n",
            " [    20  36000]\n",
            " [    26  80000]\n",
            " [    35  22000]\n",
            " [    35  39000]\n",
            " [    49  74000]\n",
            " [    39 134000]\n",
            " [    41  71000]\n",
            " [    58 101000]\n",
            " [    47  47000]\n",
            " [    55 130000]\n",
            " [    52 114000]\n",
            " [    40 142000]\n",
            " [    46  22000]\n",
            " [    48  96000]\n",
            " [    52 150000]\n",
            " [    59  42000]\n",
            " [    35  58000]\n",
            " [    47  43000]\n",
            " [    60 108000]\n",
            " [    49  65000]\n",
            " [    40  78000]\n",
            " [    46  96000]\n",
            " [    59 143000]\n",
            " [    41  80000]\n",
            " [    35  91000]\n",
            " [    37 144000]\n",
            " [    60 102000]\n",
            " [    35  60000]\n",
            " [    37  53000]\n",
            " [    36 126000]\n",
            " [    56 133000]\n",
            " [    40  72000]\n",
            " [    42  80000]\n",
            " [    35 147000]\n",
            " [    39  42000]\n",
            " [    40 107000]\n",
            " [    49  86000]\n",
            " [    38 112000]\n",
            " [    46  79000]\n",
            " [    40  57000]\n",
            " [    37  80000]\n",
            " [    46  82000]\n",
            " [    53 143000]\n",
            " [    42 149000]\n",
            " [    38  59000]\n",
            " [    50  88000]\n",
            " [    56 104000]\n",
            " [    41  72000]\n",
            " [    51 146000]\n",
            " [    35  50000]\n",
            " [    62 122000]\n",
            " [    41  52000]\n",
            " [    35  97000]\n",
            " [    44  39000]\n",
            " [    37  52000]\n",
            " [    48 134000]\n",
            " [    37 146000]\n",
            " [    50  44000]\n",
            " [    52  90000]\n",
            " [    41  72000]\n",
            " [    40  57000]\n",
            " [    58  95000]\n",
            " [    45 131000]\n",
            " [    35  77000]\n",
            " [    36 144000]\n",
            " [    55 125000]\n",
            " [    35  72000]\n",
            " [    48  90000]\n",
            " [    42 108000]\n",
            " [    40  75000]\n",
            " [    37  74000]\n",
            " [    47 144000]\n",
            " [    40  61000]\n",
            " [    43 133000]\n",
            " [    59  76000]\n",
            " [    60  42000]\n",
            " [    39 106000]\n",
            " [    57  26000]\n",
            " [    57  74000]\n",
            " [    38  71000]\n",
            " [    49  88000]\n",
            " [    52  38000]\n",
            " [    50  36000]\n",
            " [    59  88000]\n",
            " [    35  61000]\n",
            " [    37  70000]\n",
            " [    52  21000]\n",
            " [    48 141000]\n",
            " [    37  93000]\n",
            " [    37  62000]\n",
            " [    48 138000]\n",
            " [    41  79000]\n",
            " [    37  78000]\n",
            " [    39 134000]\n",
            " [    49  89000]\n",
            " [    55  39000]\n",
            " [    37  77000]\n",
            " [    35  57000]\n",
            " [    36  63000]\n",
            " [    42  73000]\n",
            " [    43 112000]\n",
            " [    45  79000]\n",
            " [    46 117000]\n",
            " [    58  38000]\n",
            " [    48  74000]\n",
            " [    37 137000]\n",
            " [    37  79000]\n",
            " [    40  60000]\n",
            " [    42  54000]\n",
            " [    51 134000]\n",
            " [    47 113000]\n",
            " [    36 125000]\n",
            " [    38  50000]\n",
            " [    42  70000]\n",
            " [    39  96000]\n",
            " [    38  50000]\n",
            " [    49 141000]\n",
            " [    39  79000]\n",
            " [    39  75000]\n",
            " [    54 104000]\n",
            " [    35  55000]\n",
            " [    45  32000]\n",
            " [    36  60000]\n",
            " [    52 138000]\n",
            " [    53  82000]\n",
            " [    41  52000]\n",
            " [    48  30000]\n",
            " [    48 131000]\n",
            " [    41  60000]\n",
            " [    41  72000]\n",
            " [    42  75000]\n",
            " [    36 118000]\n",
            " [    47 107000]\n",
            " [    38  51000]\n",
            " [    48 119000]\n",
            " [    42  65000]\n",
            " [    40  65000]\n",
            " [    57  60000]\n",
            " [    36  54000]\n",
            " [    58 144000]\n",
            " [    35  79000]\n",
            " [    38  55000]\n",
            " [    39 122000]\n",
            " [    53 104000]\n",
            " [    35  75000]\n",
            " [    38  65000]\n",
            " [    47  51000]\n",
            " [    47 105000]\n",
            " [    41  63000]\n",
            " [    53  72000]\n",
            " [    54 108000]\n",
            " [    39  77000]\n",
            " [    38  61000]\n",
            " [    38 113000]\n",
            " [    37  75000]\n",
            " [    42  90000]\n",
            " [    37  57000]\n",
            " [    36  99000]\n",
            " [    60  34000]\n",
            " [    54  70000]\n",
            " [    41  72000]\n",
            " [    40  71000]\n",
            " [    42  54000]\n",
            " [    43 129000]\n",
            " [    53  34000]\n",
            " [    47  50000]\n",
            " [    42  79000]\n",
            " [    42 104000]\n",
            " [    59  29000]\n",
            " [    58  47000]\n",
            " [    46  88000]\n",
            " [    38  71000]\n",
            " [    54  26000]\n",
            " [    60  46000]\n",
            " [    60  83000]\n",
            " [    39  73000]\n",
            " [    59 130000]\n",
            " [    37  80000]\n",
            " [    46  32000]\n",
            " [    46  74000]\n",
            " [    42  53000]\n",
            " [    41  87000]\n",
            " [    58  23000]\n",
            " [    42  64000]\n",
            " [    48  33000]\n",
            " [    44 139000]\n",
            " [    49  28000]\n",
            " [    57  33000]\n",
            " [    56  60000]\n",
            " [    49  39000]\n",
            " [    39  71000]\n",
            " [    47  34000]\n",
            " [    48  35000]\n",
            " [    48  33000]\n",
            " [    47  23000]\n",
            " [    45  45000]\n",
            " [    60  42000]\n",
            " [    39  59000]\n",
            " [    48  41000]\n",
            " [    51  23000]\n",
            " [    50  20000]\n",
            " [    36  33500]\n",
            " [    50  36000]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l3MX3FDKomdK",
        "outputId": "f30f6140-511e-49f7-f34d-8a8a336ec2b5"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\n",
            " 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 1 0 1 1 0 0 0 1 0 0 0 1 0 1\n",
            " 1 1 0 0 1 1 0 1 1 0 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1\n",
            " 1 0 1 1 0 1 1 0 0 1 0 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1 1 0 0 0\n",
            " 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 0 0 1 1 0 1 0\n",
            " 0 1 0 1 0 0 1 1 0 0 1 1 0 1 1 0 0 1 0 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1\n",
            " 1 1 0 1 0 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "x_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.25, random_state=0)"
      ],
      "metadata": {
        "id": "QelVTCQcou2x"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(x_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p4TRND9dpxJ_",
        "outputId": "d7c80f64-4374-4eb9-a25b-e26e9c0ae9ef"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[    44  39000]\n",
            " [    32 120000]\n",
            " [    38  50000]\n",
            " [    32 135000]\n",
            " [    52  21000]\n",
            " [    53 104000]\n",
            " [    39  42000]\n",
            " [    38  61000]\n",
            " [    36  50000]\n",
            " [    36  63000]\n",
            " [    35  25000]\n",
            " [    35  50000]\n",
            " [    42  73000]\n",
            " [    47  49000]\n",
            " [    59  29000]\n",
            " [    49  65000]\n",
            " [    45 131000]\n",
            " [    31  89000]\n",
            " [    46  82000]\n",
            " [    47  51000]\n",
            " [    26  15000]\n",
            " [    60 102000]\n",
            " [    38 112000]\n",
            " [    40 107000]\n",
            " [    42  53000]\n",
            " [    35  59000]\n",
            " [    48  41000]\n",
            " [    48 134000]\n",
            " [    38 113000]\n",
            " [    29 148000]\n",
            " [    26  15000]\n",
            " [    60  42000]\n",
            " [    24  19000]\n",
            " [    42 149000]\n",
            " [    46  96000]\n",
            " [    28  59000]\n",
            " [    39  96000]\n",
            " [    28  89000]\n",
            " [    41  72000]\n",
            " [    45  26000]\n",
            " [    33  69000]\n",
            " [    20  82000]\n",
            " [    31  74000]\n",
            " [    42  80000]\n",
            " [    35  72000]\n",
            " [    33 149000]\n",
            " [    40  71000]\n",
            " [    51 146000]\n",
            " [    46  79000]\n",
            " [    35  75000]\n",
            " [    38  51000]\n",
            " [    36  75000]\n",
            " [    37  78000]\n",
            " [    38  61000]\n",
            " [    60 108000]\n",
            " [    20  82000]\n",
            " [    57  74000]\n",
            " [    42  65000]\n",
            " [    26  80000]\n",
            " [    46 117000]\n",
            " [    35  61000]\n",
            " [    21  68000]\n",
            " [    28  44000]\n",
            " [    41  87000]\n",
            " [    37  33000]\n",
            " [    27  90000]\n",
            " [    39  42000]\n",
            " [    28 123000]\n",
            " [    31 118000]\n",
            " [    25  87000]\n",
            " [    35  71000]\n",
            " [    37  70000]\n",
            " [    35  39000]\n",
            " [    47  23000]\n",
            " [    35 147000]\n",
            " [    48 138000]\n",
            " [    26  86000]\n",
            " [    25  79000]\n",
            " [    52 138000]\n",
            " [    51  23000]\n",
            " [    35  60000]\n",
            " [    33 113000]\n",
            " [    30 107000]\n",
            " [    48  33000]\n",
            " [    41  80000]\n",
            " [    48  96000]\n",
            " [    31  18000]\n",
            " [    31  71000]\n",
            " [    43 129000]\n",
            " [    59  76000]\n",
            " [    18  44000]\n",
            " [    36 118000]\n",
            " [    42  90000]\n",
            " [    47  30000]\n",
            " [    28  43000]\n",
            " [    40  78000]\n",
            " [    46  59000]\n",
            " [    59  42000]\n",
            " [    46  74000]\n",
            " [    35  91000]\n",
            " [    28  59000]\n",
            " [    40  57000]\n",
            " [    59 143000]\n",
            " [    57  26000]\n",
            " [    52  38000]\n",
            " [    47 113000]\n",
            " [    53 143000]\n",
            " [    35  27000]\n",
            " [    58 101000]\n",
            " [    45  45000]\n",
            " [    23  82000]\n",
            " [    46  23000]\n",
            " [    42  65000]\n",
            " [    28  84000]\n",
            " [    38  59000]\n",
            " [    26  84000]\n",
            " [    29  28000]\n",
            " [    37  71000]\n",
            " [    22  55000]\n",
            " [    48  35000]\n",
            " [    49  28000]\n",
            " [    38  65000]\n",
            " [    27  17000]\n",
            " [    46  28000]\n",
            " [    48 141000]\n",
            " [    26  17000]\n",
            " [    35  97000]\n",
            " [    39  59000]\n",
            " [    24  27000]\n",
            " [    32  18000]\n",
            " [    46  88000]\n",
            " [    35  58000]\n",
            " [    56  60000]\n",
            " [    47  34000]\n",
            " [    40  72000]\n",
            " [    32 100000]\n",
            " [    19  21000]\n",
            " [    25  90000]\n",
            " [    35  88000]\n",
            " [    28  32000]\n",
            " [    50  20000]\n",
            " [    40  59000]\n",
            " [    50  44000]\n",
            " [    35  72000]\n",
            " [    40 142000]\n",
            " [    46  32000]\n",
            " [    39  71000]\n",
            " [    20  74000]\n",
            " [    29  75000]\n",
            " [    31  76000]\n",
            " [    47  25000]\n",
            " [    40  61000]\n",
            " [    34 112000]\n",
            " [    38  80000]\n",
            " [    42  75000]\n",
            " [    47  47000]\n",
            " [    39  75000]\n",
            " [    19  25000]\n",
            " [    37  80000]\n",
            " [    36  60000]\n",
            " [    41  52000]\n",
            " [    36 125000]\n",
            " [    48  29000]\n",
            " [    36 126000]\n",
            " [    51 134000]\n",
            " [    27  57000]\n",
            " [    38  71000]\n",
            " [    39  61000]\n",
            " [    22  27000]\n",
            " [    33  60000]\n",
            " [    48  74000]\n",
            " [    58  23000]\n",
            " [    53  72000]\n",
            " [    32 117000]\n",
            " [    54  70000]\n",
            " [    30  80000]\n",
            " [    58  95000]\n",
            " [    26  52000]\n",
            " [    45  79000]\n",
            " [    24  55000]\n",
            " [    40  75000]\n",
            " [    33  28000]\n",
            " [    44 139000]\n",
            " [    22  18000]\n",
            " [    33  51000]\n",
            " [    43 133000]\n",
            " [    24  32000]\n",
            " [    46  22000]\n",
            " [    35  55000]\n",
            " [    54 104000]\n",
            " [    48 119000]\n",
            " [    35  53000]\n",
            " [    37 144000]\n",
            " [    23  66000]\n",
            " [    37 137000]\n",
            " [    31  58000]\n",
            " [    33  41000]\n",
            " [    45  22000]\n",
            " [    30  15000]\n",
            " [    19  21000]\n",
            " [    49  74000]\n",
            " [    39 122000]\n",
            " [    35  73000]\n",
            " [    39  71000]\n",
            " [    24  23000]\n",
            " [    41  72000]\n",
            " [    29  83000]\n",
            " [    54  26000]\n",
            " [    35  44000]\n",
            " [    37  75000]\n",
            " [    29  47000]\n",
            " [    31  68000]\n",
            " [    42  54000]\n",
            " [    30 135000]\n",
            " [    52 114000]\n",
            " [    50  36000]\n",
            " [    56 133000]\n",
            " [    29  61000]\n",
            " [    38  89000]\n",
            " [    26  16000]\n",
            " [    33  31000]\n",
            " [    41  72000]\n",
            " [    36  33500]\n",
            " [    55 125000]\n",
            " [    48 131000]\n",
            " [    41  71000]\n",
            " [    30  62000]\n",
            " [    37  72000]\n",
            " [    41  63000]\n",
            " [    58  47000]\n",
            " [    30 116000]\n",
            " [    20  49000]\n",
            " [    37  74000]\n",
            " [    41  59000]\n",
            " [    49  89000]\n",
            " [    28  79000]\n",
            " [    53  82000]\n",
            " [    40  57000]\n",
            " [    60  34000]\n",
            " [    35 108000]\n",
            " [    21  72000]\n",
            " [    38  71000]\n",
            " [    39 106000]\n",
            " [    37  57000]\n",
            " [    26  73000]\n",
            " [    35  23000]\n",
            " [    54 108000]\n",
            " [    30  17000]\n",
            " [    39 134000]\n",
            " [    29  43000]\n",
            " [    33  43000]\n",
            " [    35  38000]\n",
            " [    41  45000]\n",
            " [    41  72000]\n",
            " [    39 134000]\n",
            " [    27 137000]\n",
            " [    21  16000]\n",
            " [    26  32000]\n",
            " [    31  66000]\n",
            " [    39  73000]\n",
            " [    41  79000]\n",
            " [    47  50000]\n",
            " [    41  30000]\n",
            " [    37  93000]\n",
            " [    60  46000]\n",
            " [    25  22000]\n",
            " [    28  37000]\n",
            " [    38  55000]\n",
            " [    36  54000]\n",
            " [    20  36000]\n",
            " [    56 104000]\n",
            " [    40  57000]\n",
            " [    42 108000]\n",
            " [    18  23000]\n",
            " [    40  65000]\n",
            " [    47  50000]\n",
            " [    18  86000]\n",
            " [    35  79000]\n",
            " [    57  33000]\n",
            " [    34  72000]\n",
            " [    49  39000]\n",
            " [    27  31000]\n",
            " [    19  70000]\n",
            " [    39  79000]\n",
            " [    26  81000]\n",
            " [    25  80000]\n",
            " [    28  85000]\n",
            " [    55  39000]\n",
            " [    50  88000]\n",
            " [    49  88000]\n",
            " [    52 150000]\n",
            " [    35  65000]\n",
            " [    42  54000]\n",
            " [    34  43000]\n",
            " [    37  52000]\n",
            " [    48  30000]\n",
            " [    29  43000]\n",
            " [    36  52000]\n",
            " [    27  54000]\n",
            " [    26 118000]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print (x_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pnPR_6w0qRoJ",
        "outputId": "cb154624-9c21-449d-c1cd-b31ebebf02c2"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[    30  87000]\n",
            " [    38  50000]\n",
            " [    35  75000]\n",
            " [    30  79000]\n",
            " [    35  50000]\n",
            " [    27  20000]\n",
            " [    31  15000]\n",
            " [    36 144000]\n",
            " [    18  68000]\n",
            " [    47  43000]\n",
            " [    30  49000]\n",
            " [    28  55000]\n",
            " [    37  55000]\n",
            " [    39  77000]\n",
            " [    20  86000]\n",
            " [    32 117000]\n",
            " [    37  77000]\n",
            " [    19  85000]\n",
            " [    55 130000]\n",
            " [    35  22000]\n",
            " [    35  47000]\n",
            " [    47 144000]\n",
            " [    41  51000]\n",
            " [    47 105000]\n",
            " [    23  28000]\n",
            " [    49 141000]\n",
            " [    28  87000]\n",
            " [    29  80000]\n",
            " [    37  62000]\n",
            " [    32  86000]\n",
            " [    21  88000]\n",
            " [    37  79000]\n",
            " [    57  60000]\n",
            " [    37  53000]\n",
            " [    24  58000]\n",
            " [    18  52000]\n",
            " [    22  81000]\n",
            " [    34  43000]\n",
            " [    31  34000]\n",
            " [    50  36000]\n",
            " [    27  88000]\n",
            " [    41  52000]\n",
            " [    27  84000]\n",
            " [    32  25000]\n",
            " [    43 112000]\n",
            " [    27  58000]\n",
            " [    37  80000]\n",
            " [    52  90000]\n",
            " [    26  30000]\n",
            " [    49  86000]\n",
            " [    62 122000]\n",
            " [    34  25000]\n",
            " [    35  57000]\n",
            " [    34 115000]\n",
            " [    59  88000]\n",
            " [    45  32000]\n",
            " [    29  83000]\n",
            " [    26  80000]\n",
            " [    49  28000]\n",
            " [    23  20000]\n",
            " [    32  18000]\n",
            " [    60  42000]\n",
            " [    19  78000]\n",
            " [    36  99000]\n",
            " [    19  26000]\n",
            " [    60  83000]\n",
            " [    24  89000]\n",
            " [    25  58000]\n",
            " [    40  47000]\n",
            " [    42  70000]\n",
            " [    32 150000]\n",
            " [    35  77000]\n",
            " [    22  63000]\n",
            " [    45  22000]\n",
            " [    27  89000]\n",
            " [    18  82000]\n",
            " [    42  79000]\n",
            " [    40  60000]\n",
            " [    53  34000]\n",
            " [    47 107000]\n",
            " [    58 144000]\n",
            " [    59  83000]\n",
            " [    24  55000]\n",
            " [    26  35000]\n",
            " [    58  38000]\n",
            " [    42  80000]\n",
            " [    40  75000]\n",
            " [    59 130000]\n",
            " [    48  41000]\n",
            " [    41  60000]\n",
            " [    42  64000]\n",
            " [    37 146000]\n",
            " [    23  48000]\n",
            " [    25  33000]\n",
            " [    24  84000]\n",
            " [    27  96000]\n",
            " [    23  63000]\n",
            " [    48  33000]\n",
            " [    48  90000]\n",
            " [    42 104000]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print (y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K-ObB4Swqc1o",
        "outputId": "84536f88-7409-4551-abb5-293b0097b2fe"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0 1 0 1 1 1 0 0 0 0 0 0 1 1 1 0 1 0 0 1 0 1 0 1 0 0 1 1 1 1 0 1 0 1 0 0 1\n",
            " 0 0 1 0 0 0 0 0 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 0 0 0 1 0 0 0 1 1 0 0 1 0 1\n",
            " 1 1 0 0 1 1 0 0 1 1 0 1 0 0 1 1 0 1 1 1 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 1 0\n",
            " 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 0 1 0 0 0 0 1 0 0 0 1 1 0 0\n",
            " 0 0 1 0 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 0 0 0 1 0 0\n",
            " 0 0 0 0 1 1 0 1 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0\n",
            " 0 1 1 0 0 0 0 1 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 1 1 0 0 0\n",
            " 0 0 1 0 1 1 0 0 0 0 0 1 0 1 0 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1\n",
            " 0 0 0 0]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print (y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8dx0_CwRqjAs",
        "outputId": "b2eb28e9-6da2-44b1-c9bf-8225fd9b8592"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 1 0 0 0 0 0 1 1 0 0 0 0\n",
            " 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 1\n",
            " 0 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 1 0 1 1 1]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "sc = StandardScaler()\n",
        "x_train = sc.fit_transform(x_train)\n",
        "x_test = sc.transform(x_test)"
      ],
      "metadata": {
        "id": "PoVuUsGRrALk"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(x_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bk32c8tLr9TW",
        "outputId": "a24e6497-4842-42fe-fad7-63205ba88775"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 0.57933291 -0.89283571]\n",
            " [-0.60971981  1.46323832]\n",
            " [-0.01519345 -0.57287504]\n",
            " [-0.60971981  1.89954832]\n",
            " [ 1.37203471 -1.41640771]\n",
            " [ 1.47112244  0.99784098]\n",
            " [ 0.08389427 -0.8055737 ]\n",
            " [-0.01519345 -0.25291437]\n",
            " [-0.2133689  -0.57287504]\n",
            " [-0.2133689  -0.1947397 ]\n",
            " [-0.31245663 -1.30005838]\n",
            " [-0.31245663 -0.57287504]\n",
            " [ 0.38115745  0.09613364]\n",
            " [ 0.87659608 -0.60196237]\n",
            " [ 2.0656488  -1.18370904]\n",
            " [ 1.07477154 -0.13656503]\n",
            " [ 0.67842063  1.78319899]\n",
            " [-0.70880753  0.56153098]\n",
            " [ 0.77750836  0.35791964]\n",
            " [ 0.87659608 -0.5437877 ]\n",
            " [-1.20424617 -1.59093171]\n",
            " [ 2.16473652  0.93966631]\n",
            " [-0.01519345  1.23053965]\n",
            " [ 0.182982    1.08510298]\n",
            " [ 0.38115745 -0.48561303]\n",
            " [-0.31245663 -0.31108903]\n",
            " [ 0.97568381 -0.83466104]\n",
            " [ 0.97568381  1.87046099]\n",
            " [-0.01519345  1.25962698]\n",
            " [-0.90698299  2.27768366]\n",
            " [-1.20424617 -1.59093171]\n",
            " [ 2.16473652 -0.8055737 ]\n",
            " [-1.40242162 -1.47458238]\n",
            " [ 0.38115745  2.30677099]\n",
            " [ 0.77750836  0.76514231]\n",
            " [-1.00607071 -0.31108903]\n",
            " [ 0.08389427  0.76514231]\n",
            " [-1.00607071  0.56153098]\n",
            " [ 0.28206973  0.0670463 ]\n",
            " [ 0.67842063 -1.27097104]\n",
            " [-0.51063208 -0.0202157 ]\n",
            " [-1.79877252  0.35791964]\n",
            " [-0.70880753  0.12522097]\n",
            " [ 0.38115745  0.29974497]\n",
            " [-0.31245663  0.0670463 ]\n",
            " [-0.51063208  2.30677099]\n",
            " [ 0.182982    0.03795897]\n",
            " [ 1.27294699  2.21950899]\n",
            " [ 0.77750836  0.27065764]\n",
            " [-0.31245663  0.1543083 ]\n",
            " [-0.01519345 -0.5437877 ]\n",
            " [-0.2133689   0.1543083 ]\n",
            " [-0.11428118  0.24157031]\n",
            " [-0.01519345 -0.25291437]\n",
            " [ 2.16473652  1.11419031]\n",
            " [-1.79877252  0.35791964]\n",
            " [ 1.86747335  0.12522097]\n",
            " [ 0.38115745 -0.13656503]\n",
            " [-1.20424617  0.29974497]\n",
            " [ 0.77750836  1.37597632]\n",
            " [-0.31245663 -0.25291437]\n",
            " [-1.6996848  -0.04930303]\n",
            " [-1.00607071 -0.74739904]\n",
            " [ 0.28206973  0.50335631]\n",
            " [-0.11428118 -1.06735971]\n",
            " [-1.10515844  0.59061831]\n",
            " [ 0.08389427 -0.8055737 ]\n",
            " [-1.00607071  1.55050032]\n",
            " [-0.70880753  1.40506365]\n",
            " [-1.30333389  0.50335631]\n",
            " [-0.31245663  0.03795897]\n",
            " [-0.11428118  0.00887164]\n",
            " [-0.31245663 -0.89283571]\n",
            " [ 0.87659608 -1.35823304]\n",
            " [-0.31245663  2.24859633]\n",
            " [ 0.97568381  1.98681032]\n",
            " [-1.20424617  0.47426897]\n",
            " [-1.30333389  0.27065764]\n",
            " [ 1.37203471  1.98681032]\n",
            " [ 1.27294699 -1.35823304]\n",
            " [-0.31245663 -0.2820017 ]\n",
            " [-0.51063208  1.25962698]\n",
            " [-0.80789526  1.08510298]\n",
            " [ 0.97568381 -1.06735971]\n",
            " [ 0.28206973  0.29974497]\n",
            " [ 0.97568381  0.76514231]\n",
            " [-0.70880753 -1.50366971]\n",
            " [-0.70880753  0.03795897]\n",
            " [ 0.48024518  1.72502432]\n",
            " [ 2.0656488   0.18339564]\n",
            " [-1.99694797 -0.74739904]\n",
            " [-0.2133689   1.40506365]\n",
            " [ 0.38115745  0.59061831]\n",
            " [ 0.87659608 -1.15462171]\n",
            " [-1.00607071 -0.77648637]\n",
            " [ 0.182982    0.24157031]\n",
            " [ 0.77750836 -0.31108903]\n",
            " [ 2.0656488  -0.8055737 ]\n",
            " [ 0.77750836  0.12522097]\n",
            " [-0.31245663  0.61970564]\n",
            " [-1.00607071 -0.31108903]\n",
            " [ 0.182982   -0.3692637 ]\n",
            " [ 2.0656488   2.13224699]\n",
            " [ 1.86747335 -1.27097104]\n",
            " [ 1.37203471 -0.92192304]\n",
            " [ 0.87659608  1.25962698]\n",
            " [ 1.47112244  2.13224699]\n",
            " [-0.31245663 -1.24188371]\n",
            " [ 1.96656107  0.91057898]\n",
            " [ 0.67842063 -0.7183117 ]\n",
            " [-1.50150934  0.35791964]\n",
            " [ 0.77750836 -1.35823304]\n",
            " [ 0.38115745 -0.13656503]\n",
            " [-1.00607071  0.41609431]\n",
            " [-0.01519345 -0.31108903]\n",
            " [-1.20424617  0.41609431]\n",
            " [-0.90698299 -1.21279638]\n",
            " [-0.11428118  0.03795897]\n",
            " [-1.60059707 -0.42743837]\n",
            " [ 0.97568381 -1.00918504]\n",
            " [ 1.07477154 -1.21279638]\n",
            " [-0.01519345 -0.13656503]\n",
            " [-1.10515844 -1.53275705]\n",
            " [ 0.77750836 -1.21279638]\n",
            " [ 0.97568381  2.07407232]\n",
            " [-1.20424617 -1.53275705]\n",
            " [-0.31245663  0.79422964]\n",
            " [ 0.08389427 -0.31108903]\n",
            " [-1.40242162 -1.24188371]\n",
            " [-0.60971981 -1.50366971]\n",
            " [ 0.77750836  0.53244364]\n",
            " [-0.31245663 -0.34017637]\n",
            " [ 1.76838562 -0.2820017 ]\n",
            " [ 0.87659608 -1.03827237]\n",
            " [ 0.182982    0.0670463 ]\n",
            " [-0.60971981  0.88149165]\n",
            " [-1.89786025 -1.41640771]\n",
            " [-1.30333389  0.59061831]\n",
            " [-0.31245663  0.53244364]\n",
            " [-1.00607071 -1.09644704]\n",
            " [ 1.17385926 -1.44549504]\n",
            " [ 0.182982   -0.31108903]\n",
            " [ 1.17385926 -0.74739904]\n",
            " [-0.31245663  0.0670463 ]\n",
            " [ 0.182982    2.10315966]\n",
            " [ 0.77750836 -1.09644704]\n",
            " [ 0.08389427  0.03795897]\n",
            " [-1.79877252  0.12522097]\n",
            " [-0.90698299  0.1543083 ]\n",
            " [-0.70880753  0.18339564]\n",
            " [ 0.87659608 -1.30005838]\n",
            " [ 0.182982   -0.25291437]\n",
            " [-0.41154436  1.23053965]\n",
            " [-0.01519345  0.29974497]\n",
            " [ 0.38115745  0.1543083 ]\n",
            " [ 0.87659608 -0.66013704]\n",
            " [ 0.08389427  0.1543083 ]\n",
            " [-1.89786025 -1.30005838]\n",
            " [-0.11428118  0.29974497]\n",
            " [-0.2133689  -0.2820017 ]\n",
            " [ 0.28206973 -0.51470037]\n",
            " [-0.2133689   1.60867499]\n",
            " [ 0.97568381 -1.18370904]\n",
            " [-0.2133689   1.63776232]\n",
            " [ 1.27294699  1.87046099]\n",
            " [-1.10515844 -0.3692637 ]\n",
            " [-0.01519345  0.03795897]\n",
            " [ 0.08389427 -0.25291437]\n",
            " [-1.60059707 -1.24188371]\n",
            " [-0.51063208 -0.2820017 ]\n",
            " [ 0.97568381  0.12522097]\n",
            " [ 1.96656107 -1.35823304]\n",
            " [ 1.47112244  0.0670463 ]\n",
            " [-0.60971981  1.37597632]\n",
            " [ 1.57021017  0.00887164]\n",
            " [-0.80789526  0.29974497]\n",
            " [ 1.96656107  0.73605498]\n",
            " [-1.20424617 -0.51470037]\n",
            " [ 0.67842063  0.27065764]\n",
            " [-1.40242162 -0.42743837]\n",
            " [ 0.182982    0.1543083 ]\n",
            " [-0.51063208 -1.21279638]\n",
            " [ 0.57933291  2.01589766]\n",
            " [-1.60059707 -1.50366971]\n",
            " [-0.51063208 -0.5437877 ]\n",
            " [ 0.48024518  1.84137366]\n",
            " [-1.40242162 -1.09644704]\n",
            " [ 0.77750836 -1.38732038]\n",
            " [-0.31245663 -0.42743837]\n",
            " [ 1.57021017  0.99784098]\n",
            " [ 0.97568381  1.43415098]\n",
            " [-0.31245663 -0.48561303]\n",
            " [-0.11428118  2.16133432]\n",
            " [-1.50150934 -0.1074777 ]\n",
            " [-0.11428118  1.95772299]\n",
            " [-0.70880753 -0.34017637]\n",
            " [-0.51063208 -0.83466104]\n",
            " [ 0.67842063 -1.38732038]\n",
            " [-0.80789526 -1.59093171]\n",
            " [-1.89786025 -1.41640771]\n",
            " [ 1.07477154  0.12522097]\n",
            " [ 0.08389427  1.52141299]\n",
            " [-0.31245663  0.09613364]\n",
            " [ 0.08389427  0.03795897]\n",
            " [-1.40242162 -1.35823304]\n",
            " [ 0.28206973  0.0670463 ]\n",
            " [-0.90698299  0.38700697]\n",
            " [ 1.57021017 -1.27097104]\n",
            " [-0.31245663 -0.74739904]\n",
            " [-0.11428118  0.1543083 ]\n",
            " [-0.90698299 -0.66013704]\n",
            " [-0.70880753 -0.04930303]\n",
            " [ 0.38115745 -0.4565257 ]\n",
            " [-0.80789526  1.89954832]\n",
            " [ 1.37203471  1.28871432]\n",
            " [ 1.17385926 -0.98009771]\n",
            " [ 1.76838562  1.84137366]\n",
            " [-0.90698299 -0.25291437]\n",
            " [-0.01519345  0.56153098]\n",
            " [-1.20424617 -1.56184438]\n",
            " [-0.51063208 -1.12553437]\n",
            " [ 0.28206973  0.0670463 ]\n",
            " [-0.2133689  -1.05281604]\n",
            " [ 1.66929789  1.60867499]\n",
            " [ 0.97568381  1.78319899]\n",
            " [ 0.28206973  0.03795897]\n",
            " [-0.80789526 -0.22382703]\n",
            " [-0.11428118  0.0670463 ]\n",
            " [ 0.28206973 -0.1947397 ]\n",
            " [ 1.96656107 -0.66013704]\n",
            " [-0.80789526  1.34688898]\n",
            " [-1.79877252 -0.60196237]\n",
            " [-0.11428118  0.12522097]\n",
            " [ 0.28206973 -0.31108903]\n",
            " [ 1.07477154  0.56153098]\n",
            " [-1.00607071  0.27065764]\n",
            " [ 1.47112244  0.35791964]\n",
            " [ 0.182982   -0.3692637 ]\n",
            " [ 2.16473652 -1.03827237]\n",
            " [-0.31245663  1.11419031]\n",
            " [-1.6996848   0.0670463 ]\n",
            " [-0.01519345  0.03795897]\n",
            " [ 0.08389427  1.05601565]\n",
            " [-0.11428118 -0.3692637 ]\n",
            " [-1.20424617  0.09613364]\n",
            " [-0.31245663 -1.35823304]\n",
            " [ 1.57021017  1.11419031]\n",
            " [-0.80789526 -1.53275705]\n",
            " [ 0.08389427  1.87046099]\n",
            " [-0.90698299 -0.77648637]\n",
            " [-0.51063208 -0.77648637]\n",
            " [-0.31245663 -0.92192304]\n",
            " [ 0.28206973 -0.7183117 ]\n",
            " [ 0.28206973  0.0670463 ]\n",
            " [ 0.08389427  1.87046099]\n",
            " [-1.10515844  1.95772299]\n",
            " [-1.6996848  -1.56184438]\n",
            " [-1.20424617 -1.09644704]\n",
            " [-0.70880753 -0.1074777 ]\n",
            " [ 0.08389427  0.09613364]\n",
            " [ 0.28206973  0.27065764]\n",
            " [ 0.87659608 -0.57287504]\n",
            " [ 0.28206973 -1.15462171]\n",
            " [-0.11428118  0.67788031]\n",
            " [ 2.16473652 -0.68922437]\n",
            " [-1.30333389 -1.38732038]\n",
            " [-1.00607071 -0.95101037]\n",
            " [-0.01519345 -0.42743837]\n",
            " [-0.2133689  -0.4565257 ]\n",
            " [-1.79877252 -0.98009771]\n",
            " [ 1.76838562  0.99784098]\n",
            " [ 0.182982   -0.3692637 ]\n",
            " [ 0.38115745  1.11419031]\n",
            " [-1.99694797 -1.35823304]\n",
            " [ 0.182982   -0.13656503]\n",
            " [ 0.87659608 -0.57287504]\n",
            " [-1.99694797  0.47426897]\n",
            " [-0.31245663  0.27065764]\n",
            " [ 1.86747335 -1.06735971]\n",
            " [-0.41154436  0.0670463 ]\n",
            " [ 1.07477154 -0.89283571]\n",
            " [-1.10515844 -1.12553437]\n",
            " [-1.89786025  0.00887164]\n",
            " [ 0.08389427  0.27065764]\n",
            " [-1.20424617  0.32883231]\n",
            " [-1.30333389  0.29974497]\n",
            " [-1.00607071  0.44518164]\n",
            " [ 1.66929789 -0.89283571]\n",
            " [ 1.17385926  0.53244364]\n",
            " [ 1.07477154  0.53244364]\n",
            " [ 1.37203471  2.33585833]\n",
            " [-0.31245663 -0.13656503]\n",
            " [ 0.38115745 -0.4565257 ]\n",
            " [-0.41154436 -0.77648637]\n",
            " [-0.11428118 -0.51470037]\n",
            " [ 0.97568381 -1.15462171]\n",
            " [-0.90698299 -0.77648637]\n",
            " [-0.2133689  -0.51470037]\n",
            " [-1.10515844 -0.4565257 ]\n",
            " [-1.20424617  1.40506365]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(x_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bgdqLxuAsKQv",
        "outputId": "5f00d6bf-a88e-4f17-9acd-93773710afe2"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[-0.80789526  0.50335631]\n",
            " [-0.01519345 -0.57287504]\n",
            " [-0.31245663  0.1543083 ]\n",
            " [-0.80789526  0.27065764]\n",
            " [-0.31245663 -0.57287504]\n",
            " [-1.10515844 -1.44549504]\n",
            " [-0.70880753 -1.59093171]\n",
            " [-0.2133689   2.16133432]\n",
            " [-1.99694797 -0.04930303]\n",
            " [ 0.87659608 -0.77648637]\n",
            " [-0.80789526 -0.60196237]\n",
            " [-1.00607071 -0.42743837]\n",
            " [-0.11428118 -0.42743837]\n",
            " [ 0.08389427  0.21248297]\n",
            " [-1.79877252  0.47426897]\n",
            " [-0.60971981  1.37597632]\n",
            " [-0.11428118  0.21248297]\n",
            " [-1.89786025  0.44518164]\n",
            " [ 1.66929789  1.75411165]\n",
            " [-0.31245663 -1.38732038]\n",
            " [-0.31245663 -0.66013704]\n",
            " [ 0.87659608  2.16133432]\n",
            " [ 0.28206973 -0.5437877 ]\n",
            " [ 0.87659608  1.02692831]\n",
            " [-1.50150934 -1.21279638]\n",
            " [ 1.07477154  2.07407232]\n",
            " [-1.00607071  0.50335631]\n",
            " [-0.90698299  0.29974497]\n",
            " [-0.11428118 -0.22382703]\n",
            " [-0.60971981  0.47426897]\n",
            " [-1.6996848   0.53244364]\n",
            " [-0.11428118  0.27065764]\n",
            " [ 1.86747335 -0.2820017 ]\n",
            " [-0.11428118 -0.48561303]\n",
            " [-1.40242162 -0.34017637]\n",
            " [-1.99694797 -0.51470037]\n",
            " [-1.60059707  0.32883231]\n",
            " [-0.41154436 -0.77648637]\n",
            " [-0.70880753 -1.03827237]\n",
            " [ 1.17385926 -0.98009771]\n",
            " [-1.10515844  0.53244364]\n",
            " [ 0.28206973 -0.51470037]\n",
            " [-1.10515844  0.41609431]\n",
            " [-0.60971981 -1.30005838]\n",
            " [ 0.48024518  1.23053965]\n",
            " [-1.10515844 -0.34017637]\n",
            " [-0.11428118  0.29974497]\n",
            " [ 1.37203471  0.59061831]\n",
            " [-1.20424617 -1.15462171]\n",
            " [ 1.07477154  0.47426897]\n",
            " [ 2.36291198  1.52141299]\n",
            " [-0.41154436 -1.30005838]\n",
            " [-0.31245663 -0.3692637 ]\n",
            " [-0.41154436  1.31780165]\n",
            " [ 2.0656488   0.53244364]\n",
            " [ 0.67842063 -1.09644704]\n",
            " [-0.90698299  0.38700697]\n",
            " [-1.20424617  0.29974497]\n",
            " [ 1.07477154 -1.21279638]\n",
            " [-1.50150934 -1.44549504]\n",
            " [-0.60971981 -1.50366971]\n",
            " [ 2.16473652 -0.8055737 ]\n",
            " [-1.89786025  0.24157031]\n",
            " [-0.2133689   0.85240431]\n",
            " [-1.89786025 -1.27097104]\n",
            " [ 2.16473652  0.38700697]\n",
            " [-1.40242162  0.56153098]\n",
            " [-1.30333389 -0.34017637]\n",
            " [ 0.182982   -0.66013704]\n",
            " [ 0.38115745  0.00887164]\n",
            " [-0.60971981  2.33585833]\n",
            " [-0.31245663  0.21248297]\n",
            " [-1.60059707 -0.1947397 ]\n",
            " [ 0.67842063 -1.38732038]\n",
            " [-1.10515844  0.56153098]\n",
            " [-1.99694797  0.35791964]\n",
            " [ 0.38115745  0.27065764]\n",
            " [ 0.182982   -0.2820017 ]\n",
            " [ 1.47112244 -1.03827237]\n",
            " [ 0.87659608  1.08510298]\n",
            " [ 1.96656107  2.16133432]\n",
            " [ 2.0656488   0.38700697]\n",
            " [-1.40242162 -0.42743837]\n",
            " [-1.20424617 -1.00918504]\n",
            " [ 1.96656107 -0.92192304]\n",
            " [ 0.38115745  0.29974497]\n",
            " [ 0.182982    0.1543083 ]\n",
            " [ 2.0656488   1.75411165]\n",
            " [ 0.97568381 -0.83466104]\n",
            " [ 0.28206973 -0.2820017 ]\n",
            " [ 0.38115745 -0.16565236]\n",
            " [-0.11428118  2.21950899]\n",
            " [-1.50150934 -0.6310497 ]\n",
            " [-1.30333389 -1.06735971]\n",
            " [-1.40242162  0.41609431]\n",
            " [-1.10515844  0.76514231]\n",
            " [-1.50150934 -0.1947397 ]\n",
            " [ 0.97568381 -1.06735971]\n",
            " [ 0.97568381  0.59061831]\n",
            " [ 0.38115745  0.99784098]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.naive_bayes import GaussianNB\n",
        "classifier = GaussianNB()\n",
        "classifier.fit(x_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "VNsF0wgbsqRA",
        "outputId": "b073234c-e427-40e9-d3d5-577e64ee48bd"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GaussianNB()"
            ],
            "text/html": [
              "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianNB</label><div class=\"sk-toggleable__content\"><pre>GaussianNB()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = classifier.predict(x_test)"
      ],
      "metadata": {
        "id": "chx0ql2iuc1W"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "cm = confusion_matrix(y_test, y_pred)\n",
        "print(cm)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qETxyKZnu5kG",
        "outputId": "c6a9b311-9baa-4762-8d7e-c01aa7fb681c"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[65  3]\n",
            " [ 6 26]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from matplotlib.colors import ListedColormap\n",
        "x_set, y_set = x_train, y_train\n",
        "x1, x2 = np.meshgrid(np.arange(start = x_set[:, 0].min()-1, stop = x_set[:, 0].max() + 1, step=0.01), \n",
        "                     np.arange(start = x_set[:, 0].min()-1, stop = x_set[:, 0].max() +1, step=0.01))\n",
        "plt.contourf(x1,x2, classifier.predict(np.array([x1.ravel(), x2.ravel()]).T).reshape(x1.shape),\n",
        "             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\n",
        "plt.xlim(x1.min(), x1.max())\n",
        "plt.ylim(x2.min(), x2.max())\n",
        "for i, j in enumerate (np.unique(y_set)):\n",
        "  plt.scatter(x_set[y_set == j, 0], x_set[y_set==j, 1],\n",
        "              c = ListedColormap(('red', 'green'))(i), label = j)\n",
        "plt.title('Klasifikasi Data dengan Naive Bayes (Data Training)')\n",
        "plt.xlabel('Umur')\n",
        "plt.ylabel('Estimasi Gaji')\n",
        "plt.legend()\n",
        "plt.show()\n",
        "        "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        },
        "id": "vdJwDEqqwz4O",
        "outputId": "266afabc-3b48-4bd8-d953-e282891591a8"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-31-75959ec3a7ed>:10: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
            "  plt.scatter(x_set[y_set == j, 0], x_set[y_set==j, 1],\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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o2+TyeTyg1NXV+cSodsrcKRegho4cCC+/vpr7Nu3D1dffbVT6aVWq3UZxyuvvOJUKg0Ap0+fdvp3bGwssrOzJR/rc889h++++w7Tp093LPe4u6bNzc149dVXXe4fExPjdirZ3Tl27NiBn3/+2euYxo0bhw4dOuCVV15xur+7zsU33HADfv75Z3z77bcuXzMajY43SKG6du2K/v3747333nMsBQBAcXEx9uzZ43SsVqsFx3FO37uKigqPuS5Ssc/WlJaW4osvvnD5GuB87RljWLZsmeDzT58+Hdu3b8c777yDmpoap6UnwHbdLRYLnnrqKZf7tra2ug3ShaitrcVPP/2Ezp07IzU1FYDvr6Vbb70Ve/fuxUMPPQStVutUsWUfe2VlJd58802X+zY1NaGxsdExlvaE/s649NJLXTqke7NmzRq89dZbuPTSSzF27FgAvn0vY2JiAMDl2iv1OlXy50OIIUOGIDk5GW+++abT74kPPviAd5bt119/RW5uLuLj4wM1TNFopiZIXHfddXjzzTdx++2345prrsGmTZvcNnMaP348IiMjcfXVV2POnDloaGjAm2++idTUVJw8edJx3LvvvotXX30V1113HbKysnDmzBm8+eabiIuLw1VXXSX5+IcPH47PP/8cV111FaZOnYrPPvsMHTp0wKRJk/D+++8jPj4e/fr1w88//4x///vfLiW9/fr1Q2FhIQYPHoykpCTs3LkT69ev93tvqdbWVvzrX/8CYJsZOnLkCL744gv897//xZgxY/DGG284jh0xYgQSExMxc+ZM3HvvveA4Du+//77badvBgwfj448/xoIFC3DJJZcgNjYWV199NSZNmoQNGzbguuuuw8SJE3H48GG89tpr6Nevn1Ow4I5er8eDDz6IJUuWYNKkSbjqqqvw22+/4ZtvvnGZ9n3ooYfwxRdfYNKkSZg1axYGDx6MxsZG7NmzB+vXr0dFRYXPU8XPPvssJk+ejJEjR2L27Nmoq6vD8uXL0b9/f6exT5w4ES+++CImTJiAm2++GdXV1VixYgWys7Nly39qa8aMGXjqqadQWlrqdHufPn2QlZWFBx98EJWVlYiLi8Mnn3zi03LIDTfcgAcffBAPPvggkpKSXGYlCgoKMGfOHCxZsgSlpaUYP348OnTogIMHD2LdunVYtmyZU08bPuvXr0dsbCwYYzhx4gTefvtt1NXV4bXXXnPMPPj6Wpo4cSKSk5Oxbt06XHnllY7gyO7WW2/F2rVr8be//Q2bN2/GyJEjYbFYsH//fqxduxbffvsthgwZgieffBJbtmzBxIkT0aNHD1RXV+PVV19Feno6Ro0a5fF5TZ48Ge+//z7++OMPt5/q7c+7ubnZ0VF427ZtGDRokFPJvS/fy8GDBwMA7r33XlxxxRWOgE6p16nSPx/eREZG4oknnsA999yDyy67DDfccAMqKiqwevVqZGVlucx8tbS0oLi4GHfffbdCI/ZT4AqtiJ29fM9dufULL7zAALBJkyaxlpYWt2XMX3zxBRs4cCCLiopimZmZ7Pnnn2fvvPMOA8AOHz7MGGNs165d7KabbmLdu3dnOp2OpaamskmTJrGdO3c6nQsSlXTbff755ywiIoJNnz6dWSwWVldXx2bPns1SUlJYbGwsu+KKK9j+/ftdShqffvppNnToUJaQkMCio6NZnz592DPPPMOam5s9jsGdmTNnOpXNduzYkWVmZrLrr7+erV+/nlksFpf7bNu2jQ0fPpxFR0ezrl27socffph9++23DADbvHmz47iGhgZ28803s4SEBKeSZ6vVyp599lnWo0cPptPp2F/+8he2ceNGNnPmTLcl4O1ZLBa2ePFi1qVLFxYdHc0KCwvZ77//7nKdGGPszJkzbOHChSw7O5tFRkaylJQUNmLECPbCCy84rlfbsuj22n/PGWPso48+Yn369GE6nY7179+fffHFF+z6669nffr0cTru7bffZhdddBHT6XSsT58+bNWqVYJfG4y5lrK642ns9p8dtCsT3rt3Lxs3bhyLjY1lKSkp7M4773SUkK9atcpxnKfX0MiRIxkAdscdd/CO7Y033mCDBw9m0dHRrFOnTmzAgAHs4YcfZidOnPD4nNyVdMfExLBLL72UrV271ulYf15Ld999NwPA1qxZ4/brzc3N7Pnnn2e5ublMp9OxxMRENnjwYLZ48WJmMpkYY4z98MMPbPLkyaxr164sMjKSde3ald10000u7QPcMZvNLCUlhT311FMen3dUVBRLT09nkyZNYu+8845TuwQ7od/L1tZWds899zC9Xs84jnP6vgp9nXrDV9Lt7rXty+PylXS3f0+w/z5u+zuIr6S7/e9s+89R22vGGGMvv/yy47U1dOhQtm3bNjZ48GA2YcIEp+O++eYb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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from matplotlib.colors import ListedColormap\n",
        "x_set, y_set = x_test, y_test\n",
        "x1, x2 = np.meshgrid(np.arange(start = x_set[:, 0].min()-1, stop = x_set[:, 0].max() + 1, step=0.01), \n",
        "                     np.arange(start = x_set[:, 0].min()-1, stop = x_set[:, 0].max() +1, step=0.01))\n",
        "plt.contourf(x1,x2, classifier.predict(np.array([x1.ravel(), x2.ravel()]).T).reshape(x1.shape),\n",
        "             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\n",
        "plt.xlim(x1.min(), x1.max())\n",
        "plt.ylim(x2.min(), x2.max())\n",
        "for i, j in enumerate (np.unique(y_set)):\n",
        "  plt.scatter(x_set[y_set == j, 0], x_set[y_set==j, 1],\n",
        "              c = ListedColormap(('red', 'green'))(i), label = j)\n",
        "plt.title('Klasifikasi Data dengan Naive Bayes (Data Testing)')\n",
        "plt.xlabel('Umur')\n",
        "plt.ylabel('Estimasi Gaji')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        },
        "id": "U2556CfI8F00",
        "outputId": "3296ec92-f39f-4125-c76c-0ee68b9ed096"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-32-def2bb0b5b8c>:10: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
            "  plt.scatter(x_set[y_set == j, 0], x_set[y_set==j, 1],\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}