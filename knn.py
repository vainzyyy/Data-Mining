{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPwFiJSEaJo7c/S7gM0TsZV",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/nabiltoby/DataMining/blob/main/knn.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "sqxdiZBxhh1b"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = pd.read_csv('Social_Network.csv')"
      ],
      "metadata": {
        "id": "SAcxSEQFiywK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dataset.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "5WKu1CWHjGTy",
        "outputId": "8cbb8c10-dd1c-4df2-bab5-0532d73eba5e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    User ID  Gender  Age  EstimatedSalary  Purchased\n",
              "0  15624510    Male   19            21000          0\n",
              "1  15810944    Male   32            25000          0\n",
              "2  15668575    Male   28            43000          0\n",
              "3  15603246  Female   27            57000          0\n",
              "4  15804002    Male   19            78000          0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f89e5c86-5d4d-470c-8ac7-72afc4b4a2f3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>User ID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Purchased</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>15624510</td>\n",
              "      <td>Male</td>\n",
              "      <td>19</td>\n",
              "      <td>21000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>15810944</td>\n",
              "      <td>Male</td>\n",
              "      <td>32</td>\n",
              "      <td>25000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>15668575</td>\n",
              "      <td>Male</td>\n",
              "      <td>28</td>\n",
              "      <td>43000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>15603246</td>\n",
              "      <td>Female</td>\n",
              "      <td>27</td>\n",
              "      <td>57000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>15804002</td>\n",
              "      <td>Male</td>\n",
              "      <td>19</td>\n",
              "      <td>78000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f89e5c86-5d4d-470c-8ac7-72afc4b4a2f3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f89e5c86-5d4d-470c-8ac7-72afc4b4a2f3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f89e5c86-5d4d-470c-8ac7-72afc4b4a2f3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = dataset.iloc[:, [2,3]].values\n",
        "y = dataset.iloc[:, -1].values"
      ],
      "metadata": {
        "id": "BDuadpaIjiDq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ny5QnejPj2Uq",
        "outputId": "2efdb086-0660-41ce-cb13-e9dcf17c2fca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[    19  21000]\n",
            " [    32  25000]\n",
            " [    28  43000]\n",
            " [    27  57000]\n",
            " [    19  78000]\n",
            " [    25  58000]\n",
            " [    27  84000]\n",
            " [    32 150000]\n",
            " [    25  33000]\n",
            " [    35  65000]\n",
            " [    26  80000]\n",
            " [    26  52000]\n",
            " [    20  86000]\n",
            " [    32  18000]\n",
            " [    18  82000]\n",
            " [    29  80000]\n",
            " [    47  25000]\n",
            " [    45  26000]\n",
            " [    46  28000]\n",
            " [    48  29000]\n",
            " [    45  22000]\n",
            " [    47  49000]\n",
            " [    48  41000]\n",
            " [    45  22000]\n",
            " [    46  23000]\n",
            " [    47  50000]\n",
            " [    49  28000]\n",
            " [    47  30000]\n",
            " [    29  43000]\n",
            " [    31  18000]\n",
            " [    31  74000]\n",
            " [    27 137000]\n",
            " [    21  16000]\n",
            " [    28  44000]\n",
            " [    27  90000]\n",
            " [    35  27000]\n",
            " [    33  28000]\n",
            " [    30  49000]\n",
            " [    26  73000]\n",
            " [    27  31000]\n",
            " [    27  17000]\n",
            " [    33  51000]\n",
            " [    35 108000]\n",
            " [    30  15000]\n",
            " [    28  84000]\n",
            " [    23  20000]\n",
            " [    25  79000]\n",
            " [    27  54000]\n",
            " [    30 135000]\n",
            " [    31  89000]\n",
            " [    24  32000]\n",
            " [    18  44000]\n",
            " [    29  83000]\n",
            " [    35  23000]\n",
            " [    27  58000]\n",
            " [    24  55000]\n",
            " [    23  48000]\n",
            " [    28  79000]\n",
            " [    22  18000]\n",
            " [    32 117000]\n",
            " [    27  20000]\n",
            " [    25  87000]\n",
            " [    23  66000]\n",
            " [    32 120000]\n",
            " [    59  83000]\n",
            " [    24  58000]\n",
            " [    24  19000]\n",
            " [    23  82000]\n",
            " [    22  63000]\n",
            " [    31  68000]\n",
            " [    25  80000]\n",
            " [    24  27000]\n",
            " [    18  23000]\n",
            " [    33 113000]\n",
            " [    32  18000]\n",
            " [    34 112000]\n",
            " [    18  52000]\n",
            " [    22  27000]\n",
            " [    28  87000]\n",
            " [    26  17000]\n",
            " [    30  80000]\n",
            " [    39  42000]\n",
            " [    20  49000]\n",
            " [    35  88000]\n",
            " [    30  62000]\n",
            " [    31 118000]\n",
            " [    24  55000]\n",
            " [    28  85000]\n",
            " [    26  81000]\n",
            " [    35  50000]\n",
            " [    22  81000]\n",
            " [    30 116000]\n",
            " [    26  15000]\n",
            " [    29  28000]\n",
            " [    29  83000]\n",
            " [    35  44000]\n",
            " [    35  25000]\n",
            " [    28 123000]\n",
            " [    35  73000]\n",
            " [    28  37000]\n",
            " [    27  88000]\n",
            " [    28  59000]\n",
            " [    32  86000]\n",
            " [    33 149000]\n",
            " [    19  21000]\n",
            " [    21  72000]\n",
            " [    26  35000]\n",
            " [    27  89000]\n",
            " [    26  86000]\n",
            " [    38  80000]\n",
            " [    39  71000]\n",
            " [    37  71000]\n",
            " [    38  61000]\n",
            " [    37  55000]\n",
            " [    42  80000]\n",
            " [    40  57000]\n",
            " [    35  75000]\n",
            " [    36  52000]\n",
            " [    40  59000]\n",
            " [    41  59000]\n",
            " [    36  75000]\n",
            " [    37  72000]\n",
            " [    40  75000]\n",
            " [    35  53000]\n",
            " [    41  51000]\n",
            " [    39  61000]\n",
            " [    42  65000]\n",
            " [    26  32000]\n",
            " [    30  17000]\n",
            " [    26  84000]\n",
            " [    31  58000]\n",
            " [    33  31000]\n",
            " [    30  87000]\n",
            " [    21  68000]\n",
            " [    28  55000]\n",
            " [    23  63000]\n",
            " [    20  82000]\n",
            " [    30 107000]\n",
            " [    28  59000]\n",
            " [    19  25000]\n",
            " [    19  85000]\n",
            " [    18  68000]\n",
            " [    35  59000]\n",
            " [    38  89000]\n",
            " [    34  25000]\n",
            " [    24  89000]\n",
            " [    27  96000]\n",
            " [    41  30000]\n",
            " [    29  61000]\n",
            " [    20  74000]\n",
            " [    26  15000]\n",
            " [    41  45000]\n",
            " [    31  76000]\n",
            " [    36  50000]\n",
            " [    40  47000]\n",
            " [    31  15000]\n",
            " [    46  59000]\n",
            " [    29  75000]\n",
            " [    26  30000]\n",
            " [    32 135000]\n",
            " [    32 100000]\n",
            " [    25  90000]\n",
            " [    37  33000]\n",
            " [    35  38000]\n",
            " [    33  69000]\n",
            " [    18  86000]\n",
            " [    22  55000]\n",
            " [    35  71000]\n",
            " [    29 148000]\n",
            " [    29  47000]\n",
            " [    21  88000]\n",
            " [    34 115000]\n",
            " [    26 118000]\n",
            " [    34  43000]\n",
            " [    34  72000]\n",
            " [    23  28000]\n",
            " [    35  47000]\n",
            " [    25  22000]\n",
            " [    24  23000]\n",
            " [    31  34000]\n",
            " [    26  16000]\n",
            " [    31  71000]\n",
            " [    32 117000]\n",
            " [    33  43000]\n",
            " [    33  60000]\n",
            " [    31  66000]\n",
            " [    20  82000]\n",
            " [    33  41000]\n",
            " [    35  72000]\n",
            " [    28  32000]\n",
            " [    24  84000]\n",
            " [    19  26000]\n",
            " [    29  43000]\n",
            " [    19  70000]\n",
            " [    28  89000]\n",
            " [    34  43000]\n",
            " [    30  79000]\n",
            " [    20  36000]\n",
            " [    26  80000]\n",
            " [    35  22000]\n",
            " [    35  39000]\n",
            " [    49  74000]\n",
            " [    39 134000]\n",
            " [    41  71000]\n",
            " [    58 101000]\n",
            " [    47  47000]\n",
            " [    55 130000]\n",
            " [    52 114000]\n",
            " [    40 142000]\n",
            " [    46  22000]\n",
            " [    48  96000]\n",
            " [    52 150000]\n",
            " [    59  42000]\n",
            " [    35  58000]\n",
            " [    47  43000]\n",
            " [    60 108000]\n",
            " [    49  65000]\n",
            " [    40  78000]\n",
            " [    46  96000]\n",
            " [    59 143000]\n",
            " [    41  80000]\n",
            " [    35  91000]\n",
            " [    37 144000]\n",
            " [    60 102000]\n",
            " [    35  60000]\n",
            " [    37  53000]\n",
            " [    36 126000]\n",
            " [    56 133000]\n",
            " [    40  72000]\n",
            " [    42  80000]\n",
            " [    35 147000]\n",
            " [    39  42000]\n",
            " [    40 107000]\n",
            " [    49  86000]\n",
            " [    38 112000]\n",
            " [    46  79000]\n",
            " [    40  57000]\n",
            " [    37  80000]\n",
            " [    46  82000]\n",
            " [    53 143000]\n",
            " [    42 149000]\n",
            " [    38  59000]\n",
            " [    50  88000]\n",
            " [    56 104000]\n",
            " [    41  72000]\n",
            " [    51 146000]\n",
            " [    35  50000]\n",
            " [    62 122000]\n",
            " [    41  52000]\n",
            " [    35  97000]\n",
            " [    44  39000]\n",
            " [    37  52000]\n",
            " [    48 134000]\n",
            " [    37 146000]\n",
            " [    50  44000]\n",
            " [    52  90000]\n",
            " [    41  72000]\n",
            " [    40  57000]\n",
            " [    58  95000]\n",
            " [    45 131000]\n",
            " [    35  77000]\n",
            " [    36 144000]\n",
            " [    55 125000]\n",
            " [    35  72000]\n",
            " [    48  90000]\n",
            " [    42 108000]\n",
            " [    40  75000]\n",
            " [    37  74000]\n",
            " [    47 144000]\n",
            " [    40  61000]\n",
            " [    43 133000]\n",
            " [    59  76000]\n",
            " [    60  42000]\n",
            " [    39 106000]\n",
            " [    57  26000]\n",
            " [    57  74000]\n",
            " [    38  71000]\n",
            " [    49  88000]\n",
            " [    52  38000]\n",
            " [    50  36000]\n",
            " [    59  88000]\n",
            " [    35  61000]\n",
            " [    37  70000]\n",
            " [    52  21000]\n",
            " [    48 141000]\n",
            " [    37  93000]\n",
            " [    37  62000]\n",
            " [    48 138000]\n",
            " [    41  79000]\n",
            " [    37  78000]\n",
            " [    39 134000]\n",
            " [    49  89000]\n",
            " [    55  39000]\n",
            " [    37  77000]\n",
            " [    35  57000]\n",
            " [    36  63000]\n",
            " [    42  73000]\n",
            " [    43 112000]\n",
            " [    45  79000]\n",
            " [    46 117000]\n",
            " [    58  38000]\n",
            " [    48  74000]\n",
            " [    37 137000]\n",
            " [    37  79000]\n",
            " [    40  60000]\n",
            " [    42  54000]\n",
            " [    51 134000]\n",
            " [    47 113000]\n",
            " [    36 125000]\n",
            " [    38  50000]\n",
            " [    42  70000]\n",
            " [    39  96000]\n",
            " [    38  50000]\n",
            " [    49 141000]\n",
            " [    39  79000]\n",
            " [    39  75000]\n",
            " [    54 104000]\n",
            " [    35  55000]\n",
            " [    45  32000]\n",
            " [    36  60000]\n",
            " [    52 138000]\n",
            " [    53  82000]\n",
            " [    41  52000]\n",
            " [    48  30000]\n",
            " [    48 131000]\n",
            " [    41  60000]\n",
            " [    41  72000]\n",
            " [    42  75000]\n",
            " [    36 118000]\n",
            " [    47 107000]\n",
            " [    38  51000]\n",
            " [    48 119000]\n",
            " [    42  65000]\n",
            " [    40  65000]\n",
            " [    57  60000]\n",
            " [    36  54000]\n",
            " [    58 144000]\n",
            " [    35  79000]\n",
            " [    38  55000]\n",
            " [    39 122000]\n",
            " [    53 104000]\n",
            " [    35  75000]\n",
            " [    38  65000]\n",
            " [    47  51000]\n",
            " [    47 105000]\n",
            " [    41  63000]\n",
            " [    53  72000]\n",
            " [    54 108000]\n",
            " [    39  77000]\n",
            " [    38  61000]\n",
            " [    38 113000]\n",
            " [    37  75000]\n",
            " [    42  90000]\n",
            " [    37  57000]\n",
            " [    36  99000]\n",
            " [    60  34000]\n",
            " [    54  70000]\n",
            " [    41  72000]\n",
            " [    40  71000]\n",
            " [    42  54000]\n",
            " [    43 129000]\n",
            " [    53  34000]\n",
            " [    47  50000]\n",
            " [    42  79000]\n",
            " [    42 104000]\n",
            " [    59  29000]\n",
            " [    58  47000]\n",
            " [    46  88000]\n",
            " [    38  71000]\n",
            " [    54  26000]\n",
            " [    60  46000]\n",
            " [    60  83000]\n",
            " [    39  73000]\n",
            " [    59 130000]\n",
            " [    37  80000]\n",
            " [    46  32000]\n",
            " [    46  74000]\n",
            " [    42  53000]\n",
            " [    41  87000]\n",
            " [    58  23000]\n",
            " [    42  64000]\n",
            " [    48  33000]\n",
            " [    44 139000]\n",
            " [    49  28000]\n",
            " [    57  33000]\n",
            " [    56  60000]\n",
            " [    49  39000]\n",
            " [    39  71000]\n",
            " [    47  34000]\n",
            " [    48  35000]\n",
            " [    48  33000]\n",
            " [    47  23000]\n",
            " [    45  45000]\n",
            " [    60  42000]\n",
            " [    39  59000]\n",
            " [    48  41000]\n",
            " [    51  23000]\n",
            " [    50  20000]\n",
            " [    36  33500]\n",
            " [    50  36000]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V4BJ0rgLkQOW",
        "outputId": "39f5c2d0-429a-4521-fe15-ea997da68f4c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\n",
            " 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 1 0 1 1 0 0 0 1 0 0 0 1 0 1\n",
            " 1 1 0 0 1 1 0 1 1 0 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1\n",
            " 1 0 1 1 0 1 1 0 0 1 0 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1 1 0 0 0\n",
            " 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 0 0 1 1 0 1 0\n",
            " 0 1 0 1 0 0 1 1 0 0 1 1 0 1 1 0 0 1 0 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1\n",
            " 1 1 0 1 0 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "x_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.25, random_state = 0)"
      ],
      "metadata": {
        "id": "z1Bz8fVbkVZp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(x_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XL-lmidzk4OS",
        "outputId": "b4bb3b09-e409-460b-ef79-05fcaaa8ab49"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[    44  39000]\n",
            " [    32 120000]\n",
            " [    38  50000]\n",
            " [    32 135000]\n",
            " [    52  21000]\n",
            " [    53 104000]\n",
            " [    39  42000]\n",
            " [    38  61000]\n",
            " [    36  50000]\n",
            " [    36  63000]\n",
            " [    35  25000]\n",
            " [    35  50000]\n",
            " [    42  73000]\n",
            " [    47  49000]\n",
            " [    59  29000]\n",
            " [    49  65000]\n",
            " [    45 131000]\n",
            " [    31  89000]\n",
            " [    46  82000]\n",
            " [    47  51000]\n",
            " [    26  15000]\n",
            " [    60 102000]\n",
            " [    38 112000]\n",
            " [    40 107000]\n",
            " [    42  53000]\n",
            " [    35  59000]\n",
            " [    48  41000]\n",
            " [    48 134000]\n",
            " [    38 113000]\n",
            " [    29 148000]\n",
            " [    26  15000]\n",
            " [    60  42000]\n",
            " [    24  19000]\n",
            " [    42 149000]\n",
            " [    46  96000]\n",
            " [    28  59000]\n",
            " [    39  96000]\n",
            " [    28  89000]\n",
            " [    41  72000]\n",
            " [    45  26000]\n",
            " [    33  69000]\n",
            " [    20  82000]\n",
            " [    31  74000]\n",
            " [    42  80000]\n",
            " [    35  72000]\n",
            " [    33 149000]\n",
            " [    40  71000]\n",
            " [    51 146000]\n",
            " [    46  79000]\n",
            " [    35  75000]\n",
            " [    38  51000]\n",
            " [    36  75000]\n",
            " [    37  78000]\n",
            " [    38  61000]\n",
            " [    60 108000]\n",
            " [    20  82000]\n",
            " [    57  74000]\n",
            " [    42  65000]\n",
            " [    26  80000]\n",
            " [    46 117000]\n",
            " [    35  61000]\n",
            " [    21  68000]\n",
            " [    28  44000]\n",
            " [    41  87000]\n",
            " [    37  33000]\n",
            " [    27  90000]\n",
            " [    39  42000]\n",
            " [    28 123000]\n",
            " [    31 118000]\n",
            " [    25  87000]\n",
            " [    35  71000]\n",
            " [    37  70000]\n",
            " [    35  39000]\n",
            " [    47  23000]\n",
            " [    35 147000]\n",
            " [    48 138000]\n",
            " [    26  86000]\n",
            " [    25  79000]\n",
            " [    52 138000]\n",
            " [    51  23000]\n",
            " [    35  60000]\n",
            " [    33 113000]\n",
            " [    30 107000]\n",
            " [    48  33000]\n",
            " [    41  80000]\n",
            " [    48  96000]\n",
            " [    31  18000]\n",
            " [    31  71000]\n",
            " [    43 129000]\n",
            " [    59  76000]\n",
            " [    18  44000]\n",
            " [    36 118000]\n",
            " [    42  90000]\n",
            " [    47  30000]\n",
            " [    28  43000]\n",
            " [    40  78000]\n",
            " [    46  59000]\n",
            " [    59  42000]\n",
            " [    46  74000]\n",
            " [    35  91000]\n",
            " [    28  59000]\n",
            " [    40  57000]\n",
            " [    59 143000]\n",
            " [    57  26000]\n",
            " [    52  38000]\n",
            " [    47 113000]\n",
            " [    53 143000]\n",
            " [    35  27000]\n",
            " [    58 101000]\n",
            " [    45  45000]\n",
            " [    23  82000]\n",
            " [    46  23000]\n",
            " [    42  65000]\n",
            " [    28  84000]\n",
            " [    38  59000]\n",
            " [    26  84000]\n",
            " [    29  28000]\n",
            " [    37  71000]\n",
            " [    22  55000]\n",
            " [    48  35000]\n",
            " [    49  28000]\n",
            " [    38  65000]\n",
            " [    27  17000]\n",
            " [    46  28000]\n",
            " [    48 141000]\n",
            " [    26  17000]\n",
            " [    35  97000]\n",
            " [    39  59000]\n",
            " [    24  27000]\n",
            " [    32  18000]\n",
            " [    46  88000]\n",
            " [    35  58000]\n",
            " [    56  60000]\n",
            " [    47  34000]\n",
            " [    40  72000]\n",
            " [    32 100000]\n",
            " [    19  21000]\n",
            " [    25  90000]\n",
            " [    35  88000]\n",
            " [    28  32000]\n",
            " [    50  20000]\n",
            " [    40  59000]\n",
            " [    50  44000]\n",
            " [    35  72000]\n",
            " [    40 142000]\n",
            " [    46  32000]\n",
            " [    39  71000]\n",
            " [    20  74000]\n",
            " [    29  75000]\n",
            " [    31  76000]\n",
            " [    47  25000]\n",
            " [    40  61000]\n",
            " [    34 112000]\n",
            " [    38  80000]\n",
            " [    42  75000]\n",
            " [    47  47000]\n",
            " [    39  75000]\n",
            " [    19  25000]\n",
            " [    37  80000]\n",
            " [    36  60000]\n",
            " [    41  52000]\n",
            " [    36 125000]\n",
            " [    48  29000]\n",
            " [    36 126000]\n",
            " [    51 134000]\n",
            " [    27  57000]\n",
            " [    38  71000]\n",
            " [    39  61000]\n",
            " [    22  27000]\n",
            " [    33  60000]\n",
            " [    48  74000]\n",
            " [    58  23000]\n",
            " [    53  72000]\n",
            " [    32 117000]\n",
            " [    54  70000]\n",
            " [    30  80000]\n",
            " [    58  95000]\n",
            " [    26  52000]\n",
            " [    45  79000]\n",
            " [    24  55000]\n",
            " [    40  75000]\n",
            " [    33  28000]\n",
            " [    44 139000]\n",
            " [    22  18000]\n",
            " [    33  51000]\n",
            " [    43 133000]\n",
            " [    24  32000]\n",
            " [    46  22000]\n",
            " [    35  55000]\n",
            " [    54 104000]\n",
            " [    48 119000]\n",
            " [    35  53000]\n",
            " [    37 144000]\n",
            " [    23  66000]\n",
            " [    37 137000]\n",
            " [    31  58000]\n",
            " [    33  41000]\n",
            " [    45  22000]\n",
            " [    30  15000]\n",
            " [    19  21000]\n",
            " [    49  74000]\n",
            " [    39 122000]\n",
            " [    35  73000]\n",
            " [    39  71000]\n",
            " [    24  23000]\n",
            " [    41  72000]\n",
            " [    29  83000]\n",
            " [    54  26000]\n",
            " [    35  44000]\n",
            " [    37  75000]\n",
            " [    29  47000]\n",
            " [    31  68000]\n",
            " [    42  54000]\n",
            " [    30 135000]\n",
            " [    52 114000]\n",
            " [    50  36000]\n",
            " [    56 133000]\n",
            " [    29  61000]\n",
            " [    38  89000]\n",
            " [    26  16000]\n",
            " [    33  31000]\n",
            " [    41  72000]\n",
            " [    36  33500]\n",
            " [    55 125000]\n",
            " [    48 131000]\n",
            " [    41  71000]\n",
            " [    30  62000]\n",
            " [    37  72000]\n",
            " [    41  63000]\n",
            " [    58  47000]\n",
            " [    30 116000]\n",
            " [    20  49000]\n",
            " [    37  74000]\n",
            " [    41  59000]\n",
            " [    49  89000]\n",
            " [    28  79000]\n",
            " [    53  82000]\n",
            " [    40  57000]\n",
            " [    60  34000]\n",
            " [    35 108000]\n",
            " [    21  72000]\n",
            " [    38  71000]\n",
            " [    39 106000]\n",
            " [    37  57000]\n",
            " [    26  73000]\n",
            " [    35  23000]\n",
            " [    54 108000]\n",
            " [    30  17000]\n",
            " [    39 134000]\n",
            " [    29  43000]\n",
            " [    33  43000]\n",
            " [    35  38000]\n",
            " [    41  45000]\n",
            " [    41  72000]\n",
            " [    39 134000]\n",
            " [    27 137000]\n",
            " [    21  16000]\n",
            " [    26  32000]\n",
            " [    31  66000]\n",
            " [    39  73000]\n",
            " [    41  79000]\n",
            " [    47  50000]\n",
            " [    41  30000]\n",
            " [    37  93000]\n",
            " [    60  46000]\n",
            " [    25  22000]\n",
            " [    28  37000]\n",
            " [    38  55000]\n",
            " [    36  54000]\n",
            " [    20  36000]\n",
            " [    56 104000]\n",
            " [    40  57000]\n",
            " [    42 108000]\n",
            " [    18  23000]\n",
            " [    40  65000]\n",
            " [    47  50000]\n",
            " [    18  86000]\n",
            " [    35  79000]\n",
            " [    57  33000]\n",
            " [    34  72000]\n",
            " [    49  39000]\n",
            " [    27  31000]\n",
            " [    19  70000]\n",
            " [    39  79000]\n",
            " [    26  81000]\n",
            " [    25  80000]\n",
            " [    28  85000]\n",
            " [    55  39000]\n",
            " [    50  88000]\n",
            " [    49  88000]\n",
            " [    52 150000]\n",
            " [    35  65000]\n",
            " [    42  54000]\n",
            " [    34  43000]\n",
            " [    37  52000]\n",
            " [    48  30000]\n",
            " [    29  43000]\n",
            " [    36  52000]\n",
            " [    27  54000]\n",
            " [    26 118000]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(x_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a-ETVEaRk85Z",
        "outputId": "720aa284-eb1f-4575-e440-345442dd8fe0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "300"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kH7sJMT2lAvb",
        "outputId": "ac3256e9-77ac-4a0d-9171-5fa326e01e96"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "400"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(x_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5pIwP0pOlDn7",
        "outputId": "037ecc27-f3b2-4fac-807d-47698198503e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "100"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CsV1BFE6lUfd",
        "outputId": "615f56aa-4bb1-4c17-b599-d30927121a86"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "400"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "T0LkQwwYlXAF",
        "outputId": "c6dbbc5d-f69b-434e-a1a1-0f1b86344524"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "100"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tt2AwH3gnDkt",
        "outputId": "48d52745-b1e7-4b2e-d626-05adeaa4f80c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "300"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "sc = StandardScaler()\n",
        "x_train = sc.fit_transform(x_train)\n",
        "x_test = sc.transform(x_test)\n",
        "     "
      ],
      "metadata": {
        "id": "zhdInwovtCBK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(x_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RmCCzpsMthxA",
        "outputId": "2e8f768b-8232-4c7c-ce8b-f93cba7c07e7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 0.57933291 -0.89283571]\n",
            " [-0.60971981  1.46323832]\n",
            " [-0.01519345 -0.57287504]\n",
            " [-0.60971981  1.89954832]\n",
            " [ 1.37203471 -1.41640771]\n",
            " [ 1.47112244  0.99784098]\n",
            " [ 0.08389427 -0.8055737 ]\n",
            " [-0.01519345 -0.25291437]\n",
            " [-0.2133689  -0.57287504]\n",
            " [-0.2133689  -0.1947397 ]\n",
            " [-0.31245663 -1.30005838]\n",
            " [-0.31245663 -0.57287504]\n",
            " [ 0.38115745  0.09613364]\n",
            " [ 0.87659608 -0.60196237]\n",
            " [ 2.0656488  -1.18370904]\n",
            " [ 1.07477154 -0.13656503]\n",
            " [ 0.67842063  1.78319899]\n",
            " [-0.70880753  0.56153098]\n",
            " [ 0.77750836  0.35791964]\n",
            " [ 0.87659608 -0.5437877 ]\n",
            " [-1.20424617 -1.59093171]\n",
            " [ 2.16473652  0.93966631]\n",
            " [-0.01519345  1.23053965]\n",
            " [ 0.182982    1.08510298]\n",
            " [ 0.38115745 -0.48561303]\n",
            " [-0.31245663 -0.31108903]\n",
            " [ 0.97568381 -0.83466104]\n",
            " [ 0.97568381  1.87046099]\n",
            " [-0.01519345  1.25962698]\n",
            " [-0.90698299  2.27768366]\n",
            " [-1.20424617 -1.59093171]\n",
            " [ 2.16473652 -0.8055737 ]\n",
            " [-1.40242162 -1.47458238]\n",
            " [ 0.38115745  2.30677099]\n",
            " [ 0.77750836  0.76514231]\n",
            " [-1.00607071 -0.31108903]\n",
            " [ 0.08389427  0.76514231]\n",
            " [-1.00607071  0.56153098]\n",
            " [ 0.28206973  0.0670463 ]\n",
            " [ 0.67842063 -1.27097104]\n",
            " [-0.51063208 -0.0202157 ]\n",
            " [-1.79877252  0.35791964]\n",
            " [-0.70880753  0.12522097]\n",
            " [ 0.38115745  0.29974497]\n",
            " [-0.31245663  0.0670463 ]\n",
            " [-0.51063208  2.30677099]\n",
            " [ 0.182982    0.03795897]\n",
            " [ 1.27294699  2.21950899]\n",
            " [ 0.77750836  0.27065764]\n",
            " [-0.31245663  0.1543083 ]\n",
            " [-0.01519345 -0.5437877 ]\n",
            " [-0.2133689   0.1543083 ]\n",
            " [-0.11428118  0.24157031]\n",
            " [-0.01519345 -0.25291437]\n",
            " [ 2.16473652  1.11419031]\n",
            " [-1.79877252  0.35791964]\n",
            " [ 1.86747335  0.12522097]\n",
            " [ 0.38115745 -0.13656503]\n",
            " [-1.20424617  0.29974497]\n",
            " [ 0.77750836  1.37597632]\n",
            " [-0.31245663 -0.25291437]\n",
            " [-1.6996848  -0.04930303]\n",
            " [-1.00607071 -0.74739904]\n",
            " [ 0.28206973  0.50335631]\n",
            " [-0.11428118 -1.06735971]\n",
            " [-1.10515844  0.59061831]\n",
            " [ 0.08389427 -0.8055737 ]\n",
            " [-1.00607071  1.55050032]\n",
            " [-0.70880753  1.40506365]\n",
            " [-1.30333389  0.50335631]\n",
            " [-0.31245663  0.03795897]\n",
            " [-0.11428118  0.00887164]\n",
            " [-0.31245663 -0.89283571]\n",
            " [ 0.87659608 -1.35823304]\n",
            " [-0.31245663  2.24859633]\n",
            " [ 0.97568381  1.98681032]\n",
            " [-1.20424617  0.47426897]\n",
            " [-1.30333389  0.27065764]\n",
            " [ 1.37203471  1.98681032]\n",
            " [ 1.27294699 -1.35823304]\n",
            " [-0.31245663 -0.2820017 ]\n",
            " [-0.51063208  1.25962698]\n",
            " [-0.80789526  1.08510298]\n",
            " [ 0.97568381 -1.06735971]\n",
            " [ 0.28206973  0.29974497]\n",
            " [ 0.97568381  0.76514231]\n",
            " [-0.70880753 -1.50366971]\n",
            " [-0.70880753  0.03795897]\n",
            " [ 0.48024518  1.72502432]\n",
            " [ 2.0656488   0.18339564]\n",
            " [-1.99694797 -0.74739904]\n",
            " [-0.2133689   1.40506365]\n",
            " [ 0.38115745  0.59061831]\n",
            " [ 0.87659608 -1.15462171]\n",
            " [-1.00607071 -0.77648637]\n",
            " [ 0.182982    0.24157031]\n",
            " [ 0.77750836 -0.31108903]\n",
            " [ 2.0656488  -0.8055737 ]\n",
            " [ 0.77750836  0.12522097]\n",
            " [-0.31245663  0.61970564]\n",
            " [-1.00607071 -0.31108903]\n",
            " [ 0.182982   -0.3692637 ]\n",
            " [ 2.0656488   2.13224699]\n",
            " [ 1.86747335 -1.27097104]\n",
            " [ 1.37203471 -0.92192304]\n",
            " [ 0.87659608  1.25962698]\n",
            " [ 1.47112244  2.13224699]\n",
            " [-0.31245663 -1.24188371]\n",
            " [ 1.96656107  0.91057898]\n",
            " [ 0.67842063 -0.7183117 ]\n",
            " [-1.50150934  0.35791964]\n",
            " [ 0.77750836 -1.35823304]\n",
            " [ 0.38115745 -0.13656503]\n",
            " [-1.00607071  0.41609431]\n",
            " [-0.01519345 -0.31108903]\n",
            " [-1.20424617  0.41609431]\n",
            " [-0.90698299 -1.21279638]\n",
            " [-0.11428118  0.03795897]\n",
            " [-1.60059707 -0.42743837]\n",
            " [ 0.97568381 -1.00918504]\n",
            " [ 1.07477154 -1.21279638]\n",
            " [-0.01519345 -0.13656503]\n",
            " [-1.10515844 -1.53275705]\n",
            " [ 0.77750836 -1.21279638]\n",
            " [ 0.97568381  2.07407232]\n",
            " [-1.20424617 -1.53275705]\n",
            " [-0.31245663  0.79422964]\n",
            " [ 0.08389427 -0.31108903]\n",
            " [-1.40242162 -1.24188371]\n",
            " [-0.60971981 -1.50366971]\n",
            " [ 0.77750836  0.53244364]\n",
            " [-0.31245663 -0.34017637]\n",
            " [ 1.76838562 -0.2820017 ]\n",
            " [ 0.87659608 -1.03827237]\n",
            " [ 0.182982    0.0670463 ]\n",
            " [-0.60971981  0.88149165]\n",
            " [-1.89786025 -1.41640771]\n",
            " [-1.30333389  0.59061831]\n",
            " [-0.31245663  0.53244364]\n",
            " [-1.00607071 -1.09644704]\n",
            " [ 1.17385926 -1.44549504]\n",
            " [ 0.182982   -0.31108903]\n",
            " [ 1.17385926 -0.74739904]\n",
            " [-0.31245663  0.0670463 ]\n",
            " [ 0.182982    2.10315966]\n",
            " [ 0.77750836 -1.09644704]\n",
            " [ 0.08389427  0.03795897]\n",
            " [-1.79877252  0.12522097]\n",
            " [-0.90698299  0.1543083 ]\n",
            " [-0.70880753  0.18339564]\n",
            " [ 0.87659608 -1.30005838]\n",
            " [ 0.182982   -0.25291437]\n",
            " [-0.41154436  1.23053965]\n",
            " [-0.01519345  0.29974497]\n",
            " [ 0.38115745  0.1543083 ]\n",
            " [ 0.87659608 -0.66013704]\n",
            " [ 0.08389427  0.1543083 ]\n",
            " [-1.89786025 -1.30005838]\n",
            " [-0.11428118  0.29974497]\n",
            " [-0.2133689  -0.2820017 ]\n",
            " [ 0.28206973 -0.51470037]\n",
            " [-0.2133689   1.60867499]\n",
            " [ 0.97568381 -1.18370904]\n",
            " [-0.2133689   1.63776232]\n",
            " [ 1.27294699  1.87046099]\n",
            " [-1.10515844 -0.3692637 ]\n",
            " [-0.01519345  0.03795897]\n",
            " [ 0.08389427 -0.25291437]\n",
            " [-1.60059707 -1.24188371]\n",
            " [-0.51063208 -0.2820017 ]\n",
            " [ 0.97568381  0.12522097]\n",
            " [ 1.96656107 -1.35823304]\n",
            " [ 1.47112244  0.0670463 ]\n",
            " [-0.60971981  1.37597632]\n",
            " [ 1.57021017  0.00887164]\n",
            " [-0.80789526  0.29974497]\n",
            " [ 1.96656107  0.73605498]\n",
            " [-1.20424617 -0.51470037]\n",
            " [ 0.67842063  0.27065764]\n",
            " [-1.40242162 -0.42743837]\n",
            " [ 0.182982    0.1543083 ]\n",
            " [-0.51063208 -1.21279638]\n",
            " [ 0.57933291  2.01589766]\n",
            " [-1.60059707 -1.50366971]\n",
            " [-0.51063208 -0.5437877 ]\n",
            " [ 0.48024518  1.84137366]\n",
            " [-1.40242162 -1.09644704]\n",
            " [ 0.77750836 -1.38732038]\n",
            " [-0.31245663 -0.42743837]\n",
            " [ 1.57021017  0.99784098]\n",
            " [ 0.97568381  1.43415098]\n",
            " [-0.31245663 -0.48561303]\n",
            " [-0.11428118  2.16133432]\n",
            " [-1.50150934 -0.1074777 ]\n",
            " [-0.11428118  1.95772299]\n",
            " [-0.70880753 -0.34017637]\n",
            " [-0.51063208 -0.83466104]\n",
            " [ 0.67842063 -1.38732038]\n",
            " [-0.80789526 -1.59093171]\n",
            " [-1.89786025 -1.41640771]\n",
            " [ 1.07477154  0.12522097]\n",
            " [ 0.08389427  1.52141299]\n",
            " [-0.31245663  0.09613364]\n",
            " [ 0.08389427  0.03795897]\n",
            " [-1.40242162 -1.35823304]\n",
            " [ 0.28206973  0.0670463 ]\n",
            " [-0.90698299  0.38700697]\n",
            " [ 1.57021017 -1.27097104]\n",
            " [-0.31245663 -0.74739904]\n",
            " [-0.11428118  0.1543083 ]\n",
            " [-0.90698299 -0.66013704]\n",
            " [-0.70880753 -0.04930303]\n",
            " [ 0.38115745 -0.4565257 ]\n",
            " [-0.80789526  1.89954832]\n",
            " [ 1.37203471  1.28871432]\n",
            " [ 1.17385926 -0.98009771]\n",
            " [ 1.76838562  1.84137366]\n",
            " [-0.90698299 -0.25291437]\n",
            " [-0.01519345  0.56153098]\n",
            " [-1.20424617 -1.56184438]\n",
            " [-0.51063208 -1.12553437]\n",
            " [ 0.28206973  0.0670463 ]\n",
            " [-0.2133689  -1.05281604]\n",
            " [ 1.66929789  1.60867499]\n",
            " [ 0.97568381  1.78319899]\n",
            " [ 0.28206973  0.03795897]\n",
            " [-0.80789526 -0.22382703]\n",
            " [-0.11428118  0.0670463 ]\n",
            " [ 0.28206973 -0.1947397 ]\n",
            " [ 1.96656107 -0.66013704]\n",
            " [-0.80789526  1.34688898]\n",
            " [-1.79877252 -0.60196237]\n",
            " [-0.11428118  0.12522097]\n",
            " [ 0.28206973 -0.31108903]\n",
            " [ 1.07477154  0.56153098]\n",
            " [-1.00607071  0.27065764]\n",
            " [ 1.47112244  0.35791964]\n",
            " [ 0.182982   -0.3692637 ]\n",
            " [ 2.16473652 -1.03827237]\n",
            " [-0.31245663  1.11419031]\n",
            " [-1.6996848   0.0670463 ]\n",
            " [-0.01519345  0.03795897]\n",
            " [ 0.08389427  1.05601565]\n",
            " [-0.11428118 -0.3692637 ]\n",
            " [-1.20424617  0.09613364]\n",
            " [-0.31245663 -1.35823304]\n",
            " [ 1.57021017  1.11419031]\n",
            " [-0.80789526 -1.53275705]\n",
            " [ 0.08389427  1.87046099]\n",
            " [-0.90698299 -0.77648637]\n",
            " [-0.51063208 -0.77648637]\n",
            " [-0.31245663 -0.92192304]\n",
            " [ 0.28206973 -0.7183117 ]\n",
            " [ 0.28206973  0.0670463 ]\n",
            " [ 0.08389427  1.87046099]\n",
            " [-1.10515844  1.95772299]\n",
            " [-1.6996848  -1.56184438]\n",
            " [-1.20424617 -1.09644704]\n",
            " [-0.70880753 -0.1074777 ]\n",
            " [ 0.08389427  0.09613364]\n",
            " [ 0.28206973  0.27065764]\n",
            " [ 0.87659608 -0.57287504]\n",
            " [ 0.28206973 -1.15462171]\n",
            " [-0.11428118  0.67788031]\n",
            " [ 2.16473652 -0.68922437]\n",
            " [-1.30333389 -1.38732038]\n",
            " [-1.00607071 -0.95101037]\n",
            " [-0.01519345 -0.42743837]\n",
            " [-0.2133689  -0.4565257 ]\n",
            " [-1.79877252 -0.98009771]\n",
            " [ 1.76838562  0.99784098]\n",
            " [ 0.182982   -0.3692637 ]\n",
            " [ 0.38115745  1.11419031]\n",
            " [-1.99694797 -1.35823304]\n",
            " [ 0.182982   -0.13656503]\n",
            " [ 0.87659608 -0.57287504]\n",
            " [-1.99694797  0.47426897]\n",
            " [-0.31245663  0.27065764]\n",
            " [ 1.86747335 -1.06735971]\n",
            " [-0.41154436  0.0670463 ]\n",
            " [ 1.07477154 -0.89283571]\n",
            " [-1.10515844 -1.12553437]\n",
            " [-1.89786025  0.00887164]\n",
            " [ 0.08389427  0.27065764]\n",
            " [-1.20424617  0.32883231]\n",
            " [-1.30333389  0.29974497]\n",
            " [-1.00607071  0.44518164]\n",
            " [ 1.66929789 -0.89283571]\n",
            " [ 1.17385926  0.53244364]\n",
            " [ 1.07477154  0.53244364]\n",
            " [ 1.37203471  2.33585833]\n",
            " [-0.31245663 -0.13656503]\n",
            " [ 0.38115745 -0.4565257 ]\n",
            " [-0.41154436 -0.77648637]\n",
            " [-0.11428118 -0.51470037]\n",
            " [ 0.97568381 -1.15462171]\n",
            " [-0.90698299 -0.77648637]\n",
            " [-0.2133689  -0.51470037]\n",
            " [-1.10515844 -0.4565257 ]\n",
            " [-1.20424617  1.40506365]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(x_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zyw2AIDdtpUI",
        "outputId": "a623003c-2e1d-4399-c435-b2e5c871bf14"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[3.00e+01 8.70e+04]\n",
            " [3.80e+01 5.00e+04]\n",
            " [3.50e+01 7.50e+04]\n",
            " [3.00e+01 7.90e+04]\n",
            " [3.50e+01 5.00e+04]\n",
            " [2.70e+01 2.00e+04]\n",
            " [3.10e+01 1.50e+04]\n",
            " [3.60e+01 1.44e+05]\n",
            " [1.80e+01 6.80e+04]\n",
            " [4.70e+01 4.30e+04]\n",
            " [3.00e+01 4.90e+04]\n",
            " [2.80e+01 5.50e+04]\n",
            " [3.70e+01 5.50e+04]\n",
            " [3.90e+01 7.70e+04]\n",
            " [2.00e+01 8.60e+04]\n",
            " [3.20e+01 1.17e+05]\n",
            " [3.70e+01 7.70e+04]\n",
            " [1.90e+01 8.50e+04]\n",
            " [5.50e+01 1.30e+05]\n",
            " [3.50e+01 2.20e+04]\n",
            " [3.50e+01 4.70e+04]\n",
            " [4.70e+01 1.44e+05]\n",
            " [4.10e+01 5.10e+04]\n",
            " [4.70e+01 1.05e+05]\n",
            " [2.30e+01 2.80e+04]\n",
            " [4.90e+01 1.41e+05]\n",
            " [2.80e+01 8.70e+04]\n",
            " [2.90e+01 8.00e+04]\n",
            " [3.70e+01 6.20e+04]\n",
            " [3.20e+01 8.60e+04]\n",
            " [2.10e+01 8.80e+04]\n",
            " [3.70e+01 7.90e+04]\n",
            " [5.70e+01 6.00e+04]\n",
            " [3.70e+01 5.30e+04]\n",
            " [2.40e+01 5.80e+04]\n",
            " [1.80e+01 5.20e+04]\n",
            " [2.20e+01 8.10e+04]\n",
            " [3.40e+01 4.30e+04]\n",
            " [3.10e+01 3.40e+04]\n",
            " [5.00e+01 3.60e+04]\n",
            " [2.70e+01 8.80e+04]\n",
            " [4.10e+01 5.20e+04]\n",
            " [2.70e+01 8.40e+04]\n",
            " [3.20e+01 2.50e+04]\n",
            " [4.30e+01 1.12e+05]\n",
            " [2.70e+01 5.80e+04]\n",
            " [3.70e+01 8.00e+04]\n",
            " [5.20e+01 9.00e+04]\n",
            " [2.60e+01 3.00e+04]\n",
            " [4.90e+01 8.60e+04]\n",
            " [6.20e+01 1.22e+05]\n",
            " [3.40e+01 2.50e+04]\n",
            " [3.50e+01 5.70e+04]\n",
            " [3.40e+01 1.15e+05]\n",
            " [5.90e+01 8.80e+04]\n",
            " [4.50e+01 3.20e+04]\n",
            " [2.90e+01 8.30e+04]\n",
            " [2.60e+01 8.00e+04]\n",
            " [4.90e+01 2.80e+04]\n",
            " [2.30e+01 2.00e+04]\n",
            " [3.20e+01 1.80e+04]\n",
            " [6.00e+01 4.20e+04]\n",
            " [1.90e+01 7.80e+04]\n",
            " [3.60e+01 9.90e+04]\n",
            " [1.90e+01 2.60e+04]\n",
            " [6.00e+01 8.30e+04]\n",
            " [2.40e+01 8.90e+04]\n",
            " [2.50e+01 5.80e+04]\n",
            " [4.00e+01 4.70e+04]\n",
            " [4.20e+01 7.00e+04]\n",
            " [3.20e+01 1.50e+05]\n",
            " [3.50e+01 7.70e+04]\n",
            " [2.20e+01 6.30e+04]\n",
            " [4.50e+01 2.20e+04]\n",
            " [2.70e+01 8.90e+04]\n",
            " [1.80e+01 8.20e+04]\n",
            " [4.20e+01 7.90e+04]\n",
            " [4.00e+01 6.00e+04]\n",
            " [5.30e+01 3.40e+04]\n",
            " [4.70e+01 1.07e+05]\n",
            " [5.80e+01 1.44e+05]\n",
            " [5.90e+01 8.30e+04]\n",
            " [2.40e+01 5.50e+04]\n",
            " [2.60e+01 3.50e+04]\n",
            " [5.80e+01 3.80e+04]\n",
            " [4.20e+01 8.00e+04]\n",
            " [4.00e+01 7.50e+04]\n",
            " [5.90e+01 1.30e+05]\n",
            " [4.80e+01 4.10e+04]\n",
            " [4.10e+01 6.00e+04]\n",
            " [4.20e+01 6.40e+04]\n",
            " [3.70e+01 1.46e+05]\n",
            " [2.30e+01 4.80e+04]\n",
            " [2.50e+01 3.30e+04]\n",
            " [2.40e+01 8.40e+04]\n",
            " [2.70e+01 9.60e+04]\n",
            " [2.30e+01 6.30e+04]\n",
            " [4.80e+01 3.30e+04]\n",
            " [4.80e+01 9.00e+04]\n",
            " [4.20e+01 1.04e+05]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "classifier = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p=2)\n",
        "classifier.fit(x_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "AyM999oItyN3",
        "outputId": "9c3c93f9-366e-40ee-dc5f-e80df1ee114a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KNeighborsClassifier()"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = classifier.predict(x_test)"
      ],
      "metadata": {
        "id": "0F9x71iXuWre"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "cm = confusion_matrix(y_test, y_pred)\n",
        "print(cm)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xOFvArCruey5",
        "outputId": "83fd55d2-c08e-4f3a-c85d-ea4c4bf533e9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 0 68]\n",
            " [ 0 32]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from matplotlib.colors import ListedColormap\n",
        "x_set, y_set = x_train, y_train\n",
        "x1, x2 = np.meshgrid(np.arange(start = x_set[:, 0].min()-1, stop = x_set[:, 0].max()+1, step=0.01),\n",
        "                     np.arange(start = x_set[:, 1].min()-1, stop = x_set[:, 1].max()+1, step=0.01))\n",
        "plt.contourf(x1, x2, classifier.predict(np.array([x1.ravel(), x2.ravel()]).T).reshape(x1.shape),\n",
        "             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\n",
        "plt.xlim(x1.min(), x1.max())\n",
        "plt.ylim(x2.min(), x2.max())\n",
        "for i, j in enumerate (np.unique(y_set)):\n",
        "  plt.scatter(x_set[y_set == j,0], x_set[y_set == j, 1],\n",
        "              c = ListedColormap(('red', 'green'))(i), label = j)\n",
        "plt.title('Klasifikasi Data dengan K-NN (Data Training')\n",
        "plt.xlabel('Umur')\n",
        "plt.ylabel('Estimasi Gaji')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        },
        "id": "h3GLRcuwvAit",
        "outputId": "cdcfaaf8-ac74-4864-d70d-7cfe649e8d48"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-47-f5c6581331ec>:10: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
            "  plt.scatter(x_set[y_set == j,0], x_set[y_set == j, 1],\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}